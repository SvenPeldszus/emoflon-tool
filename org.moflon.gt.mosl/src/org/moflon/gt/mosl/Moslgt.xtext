grammar org.moflon.gt.mosl.MOSLGT with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate moslgt "http://www.moflon.org/gt/mosl/MOSLGT"

GraphTransformationFile:
	imports += Import*
	using += Using*	'#package' name = QualifiedName
	
	(eClasses += EClassDef | patterns += PatternDef)
	eClasses += EClassDef*
	patterns += PatternDef*
	
;

PatternDef:"#pattern" Pattern;

EClassDef:
	'#class' name = [ecore::EClass | QualifiedName] '{'
	operations += MethodDec*
	'}'
;

MethodDec:
	'#operation' name = [ecore::EOperation | ID] '(' parameters+=MethodParameter* ')' type=[ecore::EClassifier | MethodTypeName] '{'
		startStatement=Statement
	'}'
;

Statement: InternalStatement (next = Statement)?;

InternalStatement:PatternStatement | ConditionStatement;

PatternStatement:'#invoke' pattern=[Pattern];

ConditionStatement:'#if(' pattern=[Pattern] ')''{'
	startStatement=Statement
	'}'
;

Pattern:name=ID;

MethodParameter: name = [ecore::EParameter] ':' type=[ecore::EClassifier | QualifiedName];

MethodTypeName returns ecore::EString: 'void' | QualifiedName;


/* ---------------- */
/*    Auxiliaries   */
/* ---------------- */

Import:
	'#import' name = STRING
;

Using:
	'#using' importedNamespace = QualifiedNameWithWildcard
;

terminal DECIMAL: INT '.' INT;

LiteralValue:
	(STRING | ('-')?INT | ('-')?DECIMAL | BOOL)
;

terminal BOOL:
	'true' | 'false'
;

QualifiedNameWithWildcard:
	QualifiedName '.*'
;

QualifiedName returns ecore::EString:
	ID ('.' ID)*
;