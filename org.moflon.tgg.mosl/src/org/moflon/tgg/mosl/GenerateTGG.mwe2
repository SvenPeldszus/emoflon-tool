module org.moflon.tgg.mosl.GenerateTGG

import org.eclipse.emf.mwe.utils.*
import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*
import org.moflon.core.utilities.xtext.*

var rootPath = ".."
var projectName = "org.moflon.tgg.mosl"

Workflow {
    
    component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = projectName
				rootPath = rootPath
				runtimeTest = {
					enabled = false
				}
				eclipsePlugin = {
					enabled = true
				}
				eclipsePluginTest = {
					enabled = false
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				lineDelimiter = "\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
				preferXtendStubs = false
			}
		}
		
		language = StandardLanguage {
			name = "org.moflon.tgg.mosl.TGG"
			fileExtensions = "tgg"

			serializer = {
				generateStub = false
			}
			validator = {
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
				// Generates checks for @Deprecated grammar annotations, an IssueProvider and a corresponding PropertyPage
				generateDeprecationValidation = true
				generateXtendStub = true
			}
			formatter = {
				generateXtendStub = true
				generateStub = true
			}
			generator = {
				generateXtendStub = true
			}
			scopeProvider = {
				generateXtendStub = true
			}			
		}
	}

    component = FileCreatorMwe2Component {
        filePath = "${rootPath}/${projectName}/src-gen/.keepsrcgen"
        fileContent = "Dummy file to protect empty folder in Git.\n"
    }

    component = FileCreatorMwe2Component {
        filePath = "${rootPath}/${projectName}.ui/src-gen/.keepsrcgen"
        fileContent = "Dummy file to protect empty folder in Git.\n"
    }
}