#*check for stereotype <<actioncontainer>>?? and generate specific code*#
#if( $elem.ParentElement.owner.hasKeyInStereotypes("ActionContainer") )

### TypeOf[ ${children} ] := java.lang.String
### TypeOf[ ${elem} ] := de.uni_paderborn.fujaba.uml.behavior.UMLComplexState
#parse("$lang/GWT:statechart/state/import.vm" )
#set( $children = $utility.indent("   ",$!children) )

private $upName $downName;
public class $upName extends SAction
{
    public void doAction()
    {
	###TypeOf[ ${activityDiag} ] := de.uni_paderborn.fujaba.uml.behavior.UMLActivityDiagram
	#set( $activityDiag = $elem )
	#parse("$lang/GWT:statechart/state/activityDiagBody.vm" )	
#**##if($elem.sizeOfContains() > 1)
#*   *##set( $stateChart = $elem.iteratorOfContains().next() )
		$elem contains $elem.sizeOfContains() ${utility.downFirstChar("$stateChart.getInitialState()")}.doAction();
#**##else
#*scan for action- and property-change-listeners to be added*#
#*   *##foreach( $eventTrans in $elem.iteratorOfExit() )
#*      *##set ( $eventName = $eventTrans.toString() )
#*      *##if ( $eventName.endsWith(".action") )
#*         *##set ( $objectName = $eventName.substring(0,$eventName.indexOf(".action")))
      ${objectName}.addActionListener($utility.downFirstChar("$eventTrans.getTarget()"));
#*      *##elseif ( $eventName.endsWith(".change") )
#*         *##set ( $objectName = $eventName.substring(0,$eventName.indexOf(".change")))
      ${objectName}.addPropertyChangeListener($utility.downFirstChar("$eventTrans.getTarget()"));
#*        *##end
#*      *##end
#*   *##end
#*   *###
#*generate if-elseif-chain for auto-transitions*#
#*   *##set ( $amount = 0 )
#*   *##set ( $onlyOneAutoTransTgt = "" )
#*   *##foreach( $autoTrans in $elem.iteratorOfExit() )
#*      *##set ( $autoTransName = $autoTrans.toString() )
#*      *##if ( $autoTransName.equals("auto") )
#*         *##set ( $guardExpr = $autoTrans.getGuardExprText() )
#*         *##set ( $guardTgt = ${utility.downFirstChar("$autoTrans.getTarget()")} )
#*         *##if ( $guardExpr.equals("NONE") || $guardExpr.equals("") )
#*         *##set ( $onlyOneAutoTransTgt = $guardTgt )
#*         *##else
#*         *##set ( $amount = $amount + 1 )
#*         *##end
#*         *##if ( $amount == 1 )
		if( $guardExpr )
		{
			${guardTgt}.doAction();
		}
#*         *##elseif ( $amount > 1 )
		else if( $guardExpr )
		{
			${guardTgt}.doAction();
		}
#*         *##end
#*   *##end
#*   *##if ( !$onlyOneAutoTransTgt.equals("") )
		${onlyOneAutoTransTgt}.doAction();
#*   *##end
#**##end
#**###
    }
}
#**###
#else
#**##parse("$lang/default:statechart/state/import.vm" )
#**##if( $children )
#*   *##set( $children = $utility.indent("   ",$!children) )
#*   *#
#*   *#public void $doActionName()
#*   *#{
#*   *##set( $activityDiag = $elem )
#*   *##parse("$lang/default:activityDiag/activityDiagBody.vm" )
#*   *#}
#*   *#
#**##elseif( $doActionName )
#*   *#
#*   *#public void $doActionName()
#*   *#{
#*   *#   $doAction;
#*   *#}
#*   *#
#**##end
#**##if( $entryActionName )
#*   *#
#*   *#public void $entryActionName()
#*   *#{
#*   *#   $entryAction;
#*   *#}
#*   *#
#**##end
#**##if( $exitActionName )
#*   *#
#*   *#public void $exitActionName()
#*   *#{
#*   *#   $exitAction;
#*   *#}
#*   *#
#**##end
#end