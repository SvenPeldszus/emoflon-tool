/*
 * generated by Fujaba - CodeGen2
 */
package de.uni_kassel.fujaba.codegen.rules.engine;

import java.util.Iterator;

import de.uni_kassel.fujaba.codegen.rules.NegativeBlock;
import de.uni_kassel.fujaba.codegen.rules.SearchOperation;
import de.uni_kassel.fujaba.codegen.rules.SimpleNegativeCheckOperation;
import de.uni_kassel.fujaba.codegen.rules.Token;
import de.uni_kassel.fujaba.codegen.rules.UMLLinkRef;
import de.uni_kassel.fujaba.codegen.rules.UMLObjectRef;
import de.uni_paderborn.fujaba.metamodel.structure.FClass;
import de.uni_paderborn.fujaba.metamodel.structure.FRole;
import de.uni_paderborn.fujaba.uml.behavior.UMLLink;
import de.uni_paderborn.fujaba.uml.behavior.UMLObject;
import de.uni_paderborn.fujaba.uml.behavior.UMLPath;
import de.upb.tools.fca.FHashSet; // requires Fujaba5/libs/RuntimeTools.jar in classpath
import de.upb.tools.sdm.JavaSDM; // requires Fujaba5/libs/RuntimeTools.jar in classpath
import de.upb.tools.sdm.JavaSDMException;


public class CreateNegativeBlocksMutator extends CreateBlocksMutator
{


   public void createBlock (Token op )
   {
      boolean fujaba__Success = false;
      FRole role = null;
      FClass type = null;
      NegativeBlock negativeBlock = null;
      Iterator fujaba__IterSearchNegativeToFujaba__TmpObjectNeeds = null;
      FHashSet needs = null;
      UMLObjectRef fujaba__TmpObjectNeeds = null;
      SimpleNegativeCheckOperation negCheck = null;
      Iterator fujaba__IterNeeds = null;
      UMLObject object = null;
      UMLObjectRef objectRef = null;
      UMLLink link = null;
      UMLLinkRef linkRef = null;
      Iterator fujaba__IterOpToSearchNegative = null;
      Object _TmpObject = null;
      SearchOperation searchNegative = null;

      // story pattern 
      try 
      {
         fujaba__Success = false; 

         // check object op is really bound
         JavaSDM.ensure ( op != null );
         // iterate to-many link children from op to searchNegative
         fujaba__Success = false;
         fujaba__IterOpToSearchNegative = op.iteratorOfChildren ();

         while ( fujaba__IterOpToSearchNegative.hasNext () )
         {
            try
            {
               _TmpObject =  fujaba__IterOpToSearchNegative.next ();

               // ensure correct type and really bound of object searchNegative
               JavaSDM.ensure ( _TmpObject instanceof SearchOperation );
               searchNegative = (SearchOperation) _TmpObject;

               // check isomorphic binding between objects searchNegative and op
               JavaSDM.ensure ( !searchNegative.equals (op) );

               // search to-one link link from searchNegative to linkRef
               linkRef = searchNegative.getLink ();

               // check object linkRef is really bound
               JavaSDM.ensure ( linkRef != null );

               // search to-one link ref from linkRef to link
               link = linkRef.getRef ();

               // check object link is really bound
               JavaSDM.ensure ( link != null );

               // search to-one link subject from searchNegative to objectRef
               objectRef = searchNegative.getSubject ();

               // check object objectRef is really bound
               JavaSDM.ensure ( objectRef != null );

               // search to-one link ref from objectRef to object
               object = objectRef.getRef ();

               // check object object is really bound
               JavaSDM.ensure ( object != null );

               // attribute condition type == UMLObject.NEGATIVE
               JavaSDM.ensure ( object.getType () == UMLObject.NEGATIVE );

               // constraint !(op instanceof NegativeBlock)
               JavaSDM.ensure ( !(op instanceof NegativeBlock) );
               // story pattern 
               try 
               {
                  fujaba__Success = false; 

                  role = link instanceof UMLPath ? null : link.getCorrespondingRole (object);

                  // check object role is really bound
                  JavaSDM.ensure ( role != null );
                  // check object object is really bound
                  JavaSDM.ensure ( object != null );
                  // check object searchNegative is really bound
                  JavaSDM.ensure ( searchNegative != null );
                  // search to-one link target from role to type
                  type = role.getTarget ();

                  // check object type is really bound
                  JavaSDM.ensure ( type != null );

                  // check link instanceOf from object to type
                  JavaSDM.ensure (type.equals (object.getInstanceOf ()));


                  // negative check for link children from searchNegative
                  JavaSDM.ensure (searchNegative.sizeOfChildren() == 0);
                  fujaba__Success = true;
               }
               catch ( JavaSDMException fujaba__InternalException )
               {
                  fujaba__Success = false;
               }

               if ( fujaba__Success )
               {
                  // story pattern successor
                  try 
                  {
                     fujaba__Success = false; 

                     // check object linkRef is really bound
                     JavaSDM.ensure ( linkRef != null );
                     // check object objectRef is really bound
                     JavaSDM.ensure ( objectRef != null );
                     // check object op is really bound
                     JavaSDM.ensure ( op != null );
                     // check object searchNegative is really bound
                     JavaSDM.ensure ( searchNegative != null );
                     // check isomorphic binding between objects searchNegative and op
                     JavaSDM.ensure ( !searchNegative.equals (op) );

                     // check link children from op to searchNegative
                     JavaSDM.ensure (op.hasInChildren (searchNegative));

                     // iterate to-many link needs from searchNegative to fujaba__TmpObjectNeeds
                     needs = new FHashSet ();
                     fujaba__IterSearchNegativeToFujaba__TmpObjectNeeds = searchNegative.iteratorOfNeeds ();

                     while ( fujaba__IterSearchNegativeToFujaba__TmpObjectNeeds.hasNext () )
                     {
                        try
                        {
                           fujaba__TmpObjectNeeds = (UMLObjectRef) fujaba__IterSearchNegativeToFujaba__TmpObjectNeeds.next ();

                           // check object fujaba__TmpObjectNeeds is really bound
                           JavaSDM.ensure ( fujaba__TmpObjectNeeds != null );
                           // check isomorphic binding between objects fujaba__TmpObjectNeeds and objectRef
                           JavaSDM.ensure ( !fujaba__TmpObjectNeeds.equals (objectRef) );


                           needs.add (fujaba__TmpObjectNeeds);
                        }
                        catch ( JavaSDMException fujaba__InternalException )
                        {
                           fujaba__Success = false;
                        }
                     }
                     // create object negCheck
                     negCheck = new SimpleNegativeCheckOperation ( );

                     // create link subject from objectRef to negCheck
                     objectRef.addToSubjectOf (negCheck);

                     // create link link from linkRef to negCheck
                     linkRef.addToLinkTo (negCheck);

                     // iterate set
                     fujaba__IterNeeds = needs.iterator ();
                     while ( fujaba__IterNeeds.hasNext () )
                     {
                        fujaba__TmpObjectNeeds = (UMLObjectRef) fujaba__IterNeeds.next ();
                        // create link needs from fujaba__TmpObjectNeeds to negCheck
                        fujaba__TmpObjectNeeds.addToDependentOperations (negCheck);


                     } // while
                     // create link children from op to negCheck
                     op.addBeforeOfChildren (searchNegative, negCheck);

                     fujaba__Success = true;
                  }
                  catch ( JavaSDMException fujaba__InternalException )
                  {
                     fujaba__Success = false;
                  }

                  // story pattern successor
                  try 
                  {
                     fujaba__Success = false; 

                     // check object searchNegative is really bound
                     JavaSDM.ensure ( searchNegative != null );
                     // delete object searchNegative
                     searchNegative.removeYou ();

                     fujaba__Success = true;
                  }
                  catch ( JavaSDMException fujaba__InternalException )
                  {
                     fujaba__Success = false;
                  }


               }
               else
               {
                  // story pattern 
                  try 
                  {
                     fujaba__Success = false; 

                     // check object op is really bound
                     JavaSDM.ensure ( op != null );
                     // check object searchNegative is really bound
                     JavaSDM.ensure ( searchNegative != null );
                     // check isomorphic binding between objects searchNegative and op
                     JavaSDM.ensure ( !searchNegative.equals (op) );

                     // check link children from op to searchNegative
                     JavaSDM.ensure (op.hasInChildren (searchNegative));

                     // create object negativeBlock
                     negativeBlock = new NegativeBlock ( );

                     // create link children from op to negativeBlock
                     op.addBeforeOfChildren (searchNegative, negativeBlock);

                     fujaba__Success = true;
                  }
                  catch ( JavaSDMException fujaba__InternalException )
                  {
                     fujaba__Success = false;
                  }

                  // story pattern storypatternwiththis
                  try 
                  {
                     fujaba__Success = false; 

                     // check object negativeBlock is really bound
                     JavaSDM.ensure ( negativeBlock != null );
                     // check object op is really bound
                     JavaSDM.ensure ( op != null );
                     // check object searchNegative is really bound
                     JavaSDM.ensure ( searchNegative != null );
                     // check isomorphic binding between objects op and negativeBlock
                     JavaSDM.ensure ( !op.equals (negativeBlock) );

                     // check isomorphic binding between objects searchNegative and op
                     JavaSDM.ensure ( !searchNegative.equals (op) );

                     // check link children from searchNegative to op
                     JavaSDM.ensure (op.equals (searchNegative.getParent ()));

                     // destroy link children from searchNegative to op
                     searchNegative.setParent (null);
                     // create link children from negativeBlock to searchNegative
                     negativeBlock.addToChildren (searchNegative);

                     fujaba__Success = true;
                  }
                  catch ( JavaSDMException fujaba__InternalException )
                  {
                     fujaba__Success = false;
                  }


               }





               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      return ;
   }

}


