/*
 * generated by Fujaba - CodeGen2
 */
package de.uni_kassel.fujaba.codegen.engine.listener;
import java.io.File;
import java.util.EventListener;

import de.uni_kassel.features.ReferenceHandler; // requires Fujaba5/libs/features.jar in classpath
import de.uni_kassel.features.annotation.util.Property; // requires Fujaba5/libs/features.jar in classpath
import de.uni_kassel.fujaba.codegen.CodeWriter;
import de.uni_kassel.fujaba.codegen.engine.CodeWritingEngine;
import de.uni_kassel.fujaba.codegen.rules.Token;


public interface CodeWritingListener extends EventListener
{


   /**
    * <pre>
    *           0..n     listener     0..1
    * CodeWritingListener ------------------------- CodeWritingEngine
    *           listener               engine
    * </pre>
    */
   public static final String PROPERTY_ENGINE = "engine";

   @Property( name = PROPERTY_ENGINE, partner = CodeWritingEngine.PROPERTY_LISTENER, kind = ReferenceHandler.ReferenceKind.TO_ONE,
         adornment = ReferenceHandler.Adornment.NONE)
   public boolean setEngine (CodeWritingEngine value);

   @Property( name = PROPERTY_ENGINE )
   public CodeWritingListener withEngine (CodeWritingEngine value);

   public CodeWritingEngine getEngine ();

   public void generateCodeForChildren (Token token , CodeWriter writer , String context , String code ) throws CodeWritingVetoException;

   public void generateCode (Token token , CodeWriter writer , String code ) throws CodeWritingVetoException;

   public void postWriteCodeToFile (File file , Token token , CodeWriter writer , String code );

   public void preWriteCodeToFile (File file , Token token , CodeWriter writer , String code ) throws CodeWritingVetoException;

   public void removeYou();
}


