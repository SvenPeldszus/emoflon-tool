/*
 * generated by Fujaba - CodeGen2
 */
package de.uni_kassel.fujaba.codegen.rules.engine;
import java.util.Iterator;

import de.uni_kassel.fujaba.codegen.rules.CheckOperation;
import de.uni_kassel.fujaba.codegen.rules.CheckSetBlock;
import de.uni_kassel.fujaba.codegen.rules.CollabStatOperation;
import de.uni_kassel.fujaba.codegen.rules.MutateSetBlock;
import de.uni_kassel.fujaba.codegen.rules.MutatingOperation;
import de.uni_kassel.fujaba.codegen.rules.ObjectOperation;
import de.uni_kassel.fujaba.codegen.rules.SetBlock;
import de.uni_kassel.fujaba.codegen.rules.Token;
import de.uni_kassel.fujaba.codegen.rules.UMLObjectRef;
import de.uni_paderborn.fujaba.uml.behavior.UMLCollabStat;
import de.uni_paderborn.fujaba.uml.behavior.UMLObject;
import de.upb.tools.sdm.JavaSDM; // requires Fujaba5/libs/RuntimeTools.jar in classpath
import de.upb.tools.sdm.JavaSDMException;


public class CreateSetModificationBlocksMutator extends CreateBlocksMutator
{


   public void createBlock (Token op )
   {
      boolean fujaba__Success = false;
      Object _TmpObject = null;
      SetBlock no = null;
      CollabStatOperation collabOp = null;
      UMLCollabStat collabStat = null;
      Iterator fujaba__IterObjectRefToMutateSetBlock = null;
      MutateSetBlock mutateSetBlock = null;
      UMLObject object = null;
      Iterator fujaba__IterMutatingOpToObjectRef = null;
      UMLObjectRef objectRef = null;
      Iterator fujaba__IterOpToMutatingOp = null;
      ObjectOperation mutatingOp = null;
      Iterator fujaba__IterObjectRefToCheckSetBlock = null;
      CheckSetBlock checkSetBlock = null;
      Iterator fujaba__IterOpToCheckOp = null;
      ObjectOperation checkOp = null;

      // story pattern 
      try 
      {
         fujaba__Success = false; 

         _TmpObject = op;

         // ensure correct type and really bound of object no
         JavaSDM.ensure ( _TmpObject instanceof SetBlock );
         no = (SetBlock) _TmpObject;

         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( fujaba__Success )
      {
         return ;

      }
      // story pattern Successor of 
      try 
      {
         fujaba__Success = false; 

         // check object op is really bound
         JavaSDM.ensure ( op != null );
         // iterate to-many link children from op to mutatingOp
         fujaba__Success = false;
         fujaba__IterOpToMutatingOp = op.iteratorOfChildren ();

         while ( fujaba__IterOpToMutatingOp.hasNext () )
         {
            try
            {
               _TmpObject =  fujaba__IterOpToMutatingOp.next ();

               // ensure correct type and really bound of object mutatingOp
               JavaSDM.ensure ( _TmpObject instanceof ObjectOperation );
               mutatingOp = (ObjectOperation) _TmpObject;

               // check isomorphic binding between objects op and mutatingOp
               JavaSDM.ensure ( !op.equals (mutatingOp) );

               // iterate to-many link needs from mutatingOp to objectRef
               fujaba__Success = false;
               fujaba__IterMutatingOpToObjectRef = mutatingOp.iteratorOfNeeds ();

               while ( fujaba__IterMutatingOpToObjectRef.hasNext () )
               {
                  try
                  {
                     objectRef = (UMLObjectRef) fujaba__IterMutatingOpToObjectRef.next ();

                     // check object objectRef is really bound
                     JavaSDM.ensure ( objectRef != null );
                     // search to-one link ref from objectRef to object
                     object = objectRef.getRef ();

                     // check object object is really bound
                     JavaSDM.ensure ( object != null );

                     // attribute condition type == UMLObject.SET
                     JavaSDM.ensure ( object.getType () == UMLObject.SET );

                     // constraint mutatingOp instanceof MutatingOperation
                     JavaSDM.ensure ( mutatingOp instanceof MutatingOperation );
                     // story pattern 
                     try 
                     {
                        fujaba__Success = false; 

                        _TmpObject = mutatingOp;

                        // ensure correct type and really bound of object collabOp
                        JavaSDM.ensure ( _TmpObject instanceof CollabStatOperation );
                        collabOp = (CollabStatOperation) _TmpObject;

                        // search to-one link element from collabOp to collabStat
                        _TmpObject = collabOp.getElement ();

                        // ensure correct type and really bound of object collabStat
                        JavaSDM.ensure ( _TmpObject instanceof UMLCollabStat );
                        collabStat = (UMLCollabStat) _TmpObject;


                        // attribute condition callOnElementsOfSet == false
                        JavaSDM.ensure ( collabStat.isCallOnElementsOfSet () == false );


                        fujaba__Success = true;
                     }
                     catch ( JavaSDMException fujaba__InternalException )
                     {
                        fujaba__Success = false;
                     }

                     if ( !( fujaba__Success ) )
                     {
                        // story pattern Successor of Successor of 
                        try 
                        {
                           fujaba__Success = false; 

                           // check object mutatingOp is really bound
                           JavaSDM.ensure ( mutatingOp != null );
                           // check object objectRef is really bound
                           JavaSDM.ensure ( objectRef != null );
                           // check object op is really bound
                           JavaSDM.ensure ( op != null );
                           // check isomorphic binding between objects op and mutatingOp
                           JavaSDM.ensure ( !op.equals (mutatingOp) );

                           // check link children from op to mutatingOp
                           JavaSDM.ensure (op.hasInChildren (mutatingOp));

                           // iterate to-many link needs from objectRef to mutateSetBlock
                           fujaba__Success = false;
                           fujaba__IterObjectRefToMutateSetBlock = objectRef.iteratorOfDependentOperations ();

                           while ( !(fujaba__Success) && fujaba__IterObjectRefToMutateSetBlock.hasNext () )
                           {
                              try
                              {
                                 _TmpObject =  fujaba__IterObjectRefToMutateSetBlock.next ();

                                 // ensure correct type and really bound of object mutateSetBlock
                                 JavaSDM.ensure ( _TmpObject instanceof MutateSetBlock );
                                 mutateSetBlock = (MutateSetBlock) _TmpObject;

                                 // check optional
                                 if (mutateSetBlock != null)
                                 {
                                    // check isomorphic binding between objects mutateSetBlock and op
                                    JavaSDM.ensure ( !mutateSetBlock.equals (op) );

                                 }
                                 fujaba__Success = true;
                              }
                              catch ( JavaSDMException fujaba__InternalException )
                              {
                                 fujaba__Success = false;
                              }
                           }
                           if (!fujaba__Success)
                           {
                              fujaba__Success = true;
                              mutateSetBlock = null;
                           }
                           // create object mutateSetBlock
                           if (mutateSetBlock == null)
                           {
                           mutateSetBlock = new MutateSetBlock ( );

                           }

                           // check optional
                           if (mutateSetBlock != null)
                           {
                              // create link needs from mutateSetBlock to objectRef
                              mutateSetBlock.addToNeeds (objectRef);

                              // create link children from op to mutateSetBlock
                              op.addAfterOfChildren (mutatingOp, mutateSetBlock);

                           }   fujaba__Success = true;
                        }
                        catch ( JavaSDMException fujaba__InternalException )
                        {
                           fujaba__Success = false;
                        }

                        // story pattern successor
                        try 
                        {
                           fujaba__Success = false; 

                           // check object mutateSetBlock is really bound
                           JavaSDM.ensure ( mutateSetBlock != null );
                           // check object mutatingOp is really bound
                           JavaSDM.ensure ( mutatingOp != null );
                           // check object op is really bound
                           JavaSDM.ensure ( op != null );
                           // check isomorphic binding between objects op and mutateSetBlock
                           JavaSDM.ensure ( !op.equals (mutateSetBlock) );

                           // check isomorphic binding between objects op and mutatingOp
                           JavaSDM.ensure ( !op.equals (mutatingOp) );

                           // check link children from mutatingOp to op
                           JavaSDM.ensure (op.equals (mutatingOp.getParent ()));

                           // destroy link children from mutatingOp to op
                           mutatingOp.setParent (null);
                           // create link children from mutateSetBlock to mutatingOp
                           mutateSetBlock.addToChildren (mutatingOp);

                           fujaba__Success = true;
                        }
                        catch ( JavaSDMException fujaba__InternalException )
                        {
                           fujaba__Success = false;
                        }


                     }


                     fujaba__Success = true;
                  }
                  catch ( JavaSDMException fujaba__InternalException )
                  {
                     fujaba__Success = false;
                  }
               }
               JavaSDM.ensure (fujaba__Success);

               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // story pattern Successor of 
      try 
      {
         fujaba__Success = false; 

         // check object op is really bound
         JavaSDM.ensure ( op != null );
         // iterate to-many link children from op to checkOp
         fujaba__Success = false;
         fujaba__IterOpToCheckOp = op.iteratorOfChildren ();

         while ( fujaba__IterOpToCheckOp.hasNext () )
         {
            try
            {
               _TmpObject =  fujaba__IterOpToCheckOp.next ();

               // ensure correct type and really bound of object checkOp
               JavaSDM.ensure ( _TmpObject instanceof ObjectOperation );
               checkOp = (ObjectOperation) _TmpObject;

               // check isomorphic binding between objects op and checkOp
               JavaSDM.ensure ( !op.equals (checkOp) );

               // search to-one link subject from checkOp to objectRef
               objectRef = checkOp.getSubject ();

               // check object objectRef is really bound
               JavaSDM.ensure ( objectRef != null );

               // iterate to-many link needs from objectRef to checkSetBlock
               fujaba__Success = false;
               fujaba__IterObjectRefToCheckSetBlock = objectRef.iteratorOfDependentOperations ();

               while ( fujaba__IterObjectRefToCheckSetBlock.hasNext () )
               {
                  try
                  {
                     _TmpObject =  fujaba__IterObjectRefToCheckSetBlock.next ();

                     // ensure correct type and really bound of object checkSetBlock
                     JavaSDM.ensure ( _TmpObject instanceof CheckSetBlock );
                     checkSetBlock = (CheckSetBlock) _TmpObject;

                     // check optional
                     if (checkSetBlock != null)
                     {
                        // check isomorphic binding between objects checkSetBlock and op
                        JavaSDM.ensure ( !checkSetBlock.equals (op) );

                     }
                     fujaba__Success = true;
                  }
                  catch ( JavaSDMException fujaba__InternalException )
                  {
                     fujaba__Success = false;
                  }
               }
               if (!fujaba__Success)
               {
                  fujaba__Success = true;
                  checkSetBlock = null;
               }
               // search to-one link ref from objectRef to object
               object = objectRef.getRef ();

               // check object object is really bound
               JavaSDM.ensure ( object != null );

               // attribute condition bound == true
               JavaSDM.ensure ( object.isBound () == true );

               // attribute condition type == UMLObject.SET
               JavaSDM.ensure ( object.getType () == UMLObject.SET );

               // constraint checkOp instanceof CheckOperation
               JavaSDM.ensure ( checkOp instanceof CheckOperation );
               // create object checkSetBlock
               if (checkSetBlock == null)
               {
               checkSetBlock = new CheckSetBlock ( );

               }

               // check optional
               if (checkSetBlock != null)
               {
                  // create link needs from checkSetBlock to objectRef
                  checkSetBlock.addToNeeds (objectRef);

                  // create link children from op to checkSetBlock
                  op.addAfterOfChildren (checkOp, checkSetBlock);

               }// story pattern successor
               try 
               {
                  fujaba__Success = false; 

                  // check object checkOp is really bound
                  JavaSDM.ensure ( checkOp != null );
                  // check object checkSetBlock is really bound
                  JavaSDM.ensure ( checkSetBlock != null );
                  // check object op is really bound
                  JavaSDM.ensure ( op != null );
                  // check isomorphic binding between objects op and checkOp
                  JavaSDM.ensure ( !op.equals (checkOp) );

                  // check isomorphic binding between objects op and checkSetBlock
                  JavaSDM.ensure ( !op.equals (checkSetBlock) );

                  // check link children from checkOp to op
                  JavaSDM.ensure (op.equals (checkOp.getParent ()));

                  // destroy link children from checkOp to op
                  checkOp.setParent (null);
                  // create link children from checkSetBlock to checkOp
                  checkSetBlock.addToChildren (checkOp);

                  fujaba__Success = true;
               }
               catch ( JavaSDMException fujaba__InternalException )
               {
                  fujaba__Success = false;
               }




               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      return ;
   }

}


