/*
 * generated by Fujaba - CodeGen2
 */
package de.uni_kassel.fujaba.codegen.classdiag;
import de.uni_kassel.fujaba.codegen.rules.ASGElementTokenInterface;
import de.uni_kassel.fujaba.codegen.rules.Token;
import de.uni_kassel.fujaba.codegen.rules.writers.ASGElementInterfaceCodeWriter;
import de.uni_paderborn.fujaba.metamodel.common.FElement;
import de.upb.tools.sdm.JavaSDM; // requires Fujaba5/libs/RuntimeTools.jar in classpath
import de.upb.tools.sdm.JavaSDMException;


public class ASGElementCodeWriter extends ASGElementInterfaceCodeWriter
{


   public boolean isResponsibleFor (FElement elem )
   {
      boolean fujaba__Success = false;
      Class responsible = null;

      // story pattern storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         // search to-one link responsibleFor from this to responsible
         responsible = this.getResponsible ();

         // check object responsible is really bound
         JavaSDM.ensure ( responsible != null );

         // constraint responsible.isAssignableFrom(elem.getClass())
         JavaSDM.ensure ( responsible.isAssignableFrom(elem.getClass()) );

         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( fujaba__Success )
      {
         return true;

      }
      return false;
   }

   public boolean isResponsibleFor (Token operation )
   {
      boolean fujaba__Success = false;
      Object _TmpObject = null;
      ASGElementTokenInterface asgToken = null;
      FElement asgElem = null;

      // story pattern 
      try 
      {
         fujaba__Success = false; 

         _TmpObject = operation;

         // ensure correct type and really bound of object asgToken
         JavaSDM.ensure ( _TmpObject instanceof ASGElementTokenInterface );
         asgToken = (ASGElementTokenInterface) _TmpObject;

         // search to-one link element from asgToken to asgElem
         asgElem = asgToken.getElement ();

         // check object asgElem is really bound
         JavaSDM.ensure ( asgElem != null );

         // constraint (getContext() == null) || JavaSDM.stringEquals (getContext(), operation.getContext())
         JavaSDM.ensure ( (getContext() == null) || JavaSDM.stringEquals (getContext(), operation.getContext()) );

         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( !( fujaba__Success ) )
      {
         return false;

      }
      return isResponsibleFor (asgElem);
   }

}


