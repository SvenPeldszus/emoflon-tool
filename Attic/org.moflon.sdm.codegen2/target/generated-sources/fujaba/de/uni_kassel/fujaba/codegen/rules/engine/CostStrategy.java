/*
 * generated by Fujaba - CodeGen2
 */
package de.uni_kassel.fujaba.codegen.rules.engine;
import de.uni_kassel.features.ReferenceHandler; // requires Fujaba5/libs/features.jar in classpath
import de.uni_kassel.features.annotation.util.Property; // requires Fujaba5/libs/features.jar in classpath
import de.uni_kassel.fujaba.codegen.rules.Token;


public abstract class CostStrategy
{


   public static final String PROPERTY_ACCES_S_COST = "ACCESS_COST";

   @Property( name = PROPERTY_ACCES_S_COST, kind = ReferenceHandler.ReferenceKind.ATTRIBUTE )
   public static final double ACCESS_COST = 0.05;


   public static final String PROPERTY_ASSIG_N_COST = "ASSIGN_COST";

   @Property( name = PROPERTY_ASSIG_N_COST, kind = ReferenceHandler.ReferenceKind.ATTRIBUTE )
   public static final double ASSIGN_COST = 0.25;


   public static final String PROPERTY_COMPAR_E_COST = "COMPARE_COST";

   @Property( name = PROPERTY_COMPAR_E_COST, kind = ReferenceHandler.ReferenceKind.ATTRIBUTE )
   public static final double COMPARE_COST = 0.1;


   /**
    * <pre>
    *           0..n     costStrategies     0..1
    * CostStrategy ------------------------- ExecutionPlanEngine
    *           costStrategies               engine
    * </pre>
    */
   public static final String PROPERTY_ENGINE = "engine";

   @Property( name = PROPERTY_ENGINE, partner = ExecutionPlanEngine.PROPERTY_COST_STRATEGIES, kind = ReferenceHandler.ReferenceKind.TO_ONE,
         adornment = ReferenceHandler.Adornment.PARENT)
   private ExecutionPlanEngine engine;

   @Property( name = PROPERTY_ENGINE )
   public boolean setEngine (ExecutionPlanEngine value)
   {
      boolean changed = false;

      if (this.engine != value)
      {
      
         ExecutionPlanEngine oldValue = this.engine;
         CostStrategy source = this;
         if (this.engine != null)
         {
            this.engine = null;
            oldValue.removeFromCostStrategies (this);
         }
         this.engine = value;

         if (value != null)
         {
            value.addToCostStrategies (this);
         }
         changed = true;
      
      }
      return changed;
   }

   @Property( name = PROPERTY_ENGINE )
   public CostStrategy withEngine (ExecutionPlanEngine value)
   {
      setEngine (value);
      return this;
   }

   public ExecutionPlanEngine getEngine ()
   {
      return this.engine;
   }

   public abstract double getCost (Token operation );

   public abstract boolean isResponsible (Token operation );

   public void removeYou()
   {
      this.setEngine (null);
   }
}


