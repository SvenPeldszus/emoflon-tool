/*
 * generated by Fujaba - CodeGen2
 */
package de.uni_kassel.fujaba.codegen.dlr.writer;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.StringReader;
import java.util.HashSet;
import java.util.Iterator;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import de.uni_kassel.features.ReferenceHandler; // requires Fujaba5/libs/features.jar in classpath
import de.uni_kassel.features.annotation.util.Property; // requires Fujaba5/libs/features.jar in classpath
import de.uni_kassel.fujaba.codegen.classdiag.ASGElementToken;
import de.uni_kassel.fujaba.codegen.dlr.DLRProjectToken;
import de.uni_kassel.fujaba.codegen.dlr.DLRToken;
import de.uni_kassel.fujaba.codegen.dlr.DLRTool;
import de.uni_kassel.fujaba.codegen.dlr.ElementReference;
import de.uni_kassel.fujaba.codegen.engine.CodeToFileFromContextWriter;
import de.uni_kassel.fujaba.codegen.engine.CodeWritingEngine;
import de.uni_kassel.fujaba.codegen.rules.Token;
import de.uni_paderborn.fujaba.metamodel.common.FElement;
import de.uni_paderborn.fujaba.metamodel.common.FFile;
import de.uni_paderborn.fujaba.metamodel.common.FProject;
import de.upb.tools.sdm.JavaSDM; // requires Fujaba5/libs/RuntimeTools.jar in classpath
import de.upb.tools.sdm.JavaSDMException;


public class FileDLRCodeWriter extends CodeToFileFromContextWriter
{


   public static final String PROPERTY_DL_R_COMMEN_T_PATTER_N_STRING = "DLR_COMMENT_PATTERN_STRING";

   @Property( name = PROPERTY_DL_R_COMMEN_T_PATTER_N_STRING, kind = ReferenceHandler.ReferenceKind.ATTRIBUTE )
   public static final String DLR_COMMENT_PATTERN_STRING = "/\\*" + DLRToken.START_TAG + " id=([^\\*]*)\\*/|/\\*" + DLRToken.END_TAG + " id=([^\\*]*)\\*/";


   public void appendSMAPCode (DLRToken token , DLRTool tool , StringBuilder sb )
   {
      boolean fujaba__Success = false;
      int start = 0;
      Iterator fujaba__IterTokenToChild = null;
      Object _TmpObject = null;
      DLRToken child = null;

      // story pattern storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         // check object token is really bound
         JavaSDM.ensure ( token != null );
         // collabStat call
         start = token.getStartLine();
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // story pattern storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         // check object sb is really bound
         JavaSDM.ensure ( sb != null );
         // check object token is really bound
         JavaSDM.ensure ( token != null );
         // iterate to-many link children from token to child
         fujaba__Success = false;
         fujaba__IterTokenToChild = token.iteratorOfChildren ();

         while ( fujaba__IterTokenToChild.hasNext () )
         {
            try
            {
               _TmpObject =  fujaba__IterTokenToChild.next ();

               // ensure correct type and really bound of object child
               JavaSDM.ensure ( _TmpObject instanceof DLRToken );
               child = (DLRToken) _TmpObject;

               // check isomorphic binding between objects token and child
               JavaSDM.ensure ( !token.equals (child) );

               // attribute condition startLine != child.getEndLine()
               JavaSDM.ensure ( child.getStartLine () != child.getEndLine() );

               // collabStat call
               sb.append(getSMAPLine(token, tool, start, child.getStartLine()));
               // collabStat call
               this.appendSMAPCode(child, tool, sb);
               // collabStat call
               start = child.getEndLine();

               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // story pattern storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         // check object sb is really bound
         JavaSDM.ensure ( sb != null );
         // collabStat call
         sb.append(getSMAPLine(token, tool, start, token.getEndLine()));
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      return ;
   }

   public void copyExisting (long id , DLRProjectToken proj )
   {
      boolean fujaba__Success = false;
      DLRToken token = null;
      HashSet list = null;
      FElement elem = null;
      Iterator fujaba__IterTokenToRef = null;
      ElementReference ref = null;
      DLRToken newToken = null;

      // story pattern storypatternwithparams
      try 
      {
         fujaba__Success = false; 

         // check object proj is really bound
         JavaSDM.ensure ( proj != null );
         // search to-one link tokenByID from proj to token
         token = proj.getFromTokenByID (id);

         // check object token is really bound
         JavaSDM.ensure ( token != null );

         // check isomorphic binding between objects token and proj
         JavaSDM.ensure ( !token.equals (proj) );

         // attribute condition startLine != 0
         JavaSDM.ensure ( token.getStartLine () != 0 );


         // create object list
         list = new HashSet ( );

         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( !( fujaba__Success ) )
      {
         return ;

      }
      // story pattern successor
      try 
      {
         fujaba__Success = false; 

         // check object list is really bound
         JavaSDM.ensure ( list != null );
         // check object token is really bound
         JavaSDM.ensure ( token != null );
         // iterate to-many link elements from token to ref
         fujaba__Success = false;
         fujaba__IterTokenToRef = token.iteratorOfElements ();

         while ( fujaba__IterTokenToRef.hasNext () )
         {
            try
            {
               ref = (ElementReference) fujaba__IterTokenToRef.next ();

               // check object ref is really bound
               JavaSDM.ensure ( ref != null );
               // search to-one link element from ref to elem
               elem = ref.getElement ();

               // check object elem is really bound
               JavaSDM.ensure ( elem != null );

               // create link contains from list to elem
               list.add (elem);



               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // story pattern 
      try 
      {
         fujaba__Success = false; 

         newToken = proj.createDLRToken (list);

         // check object newToken is really bound
         JavaSDM.ensure ( newToken != null );
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // story pattern successor
      try 
      {
         fujaba__Success = false; 

         // check object proj is really bound
         JavaSDM.ensure ( proj != null );
         // check object token is really bound
         JavaSDM.ensure ( token != null );
         // check isomorphic binding between objects token and proj
         JavaSDM.ensure ( !token.equals (proj) );

         // check link tokenByID from proj to token
         JavaSDM.ensure (proj.hasInTokenByID (token));

         // destroy link tokenByID from proj to token
         proj.removeFromTokenByID (token);
         // assign attribute token
         token.setId (newToken.getId());
         // create link tokenByID from proj to token
         proj.addToTokenByID (token);

         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // story pattern successor
      try 
      {
         fujaba__Success = false; 

         // check object newToken is really bound
         JavaSDM.ensure ( newToken != null );
         // check object proj is really bound
         JavaSDM.ensure ( proj != null );
         // check isomorphic binding between objects proj and newToken
         JavaSDM.ensure ( !proj.equals (newToken) );

         // assign attribute newToken
         newToken.setId (id);
         // assign attribute newToken
         newToken.setComment (token.getComment());
         // create link tokenByID from proj to newToken
         proj.addToTokenByID (newToken);

         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      return ;
   }

   public String createDLRTree (String code )
   {
      boolean fujaba__Success = false;
      Pattern pattern = null;
      BufferedReader reader = null;
      DLRTool tool = null;
      Object _TmpObject = null;
      DLRProjectToken proj = null;
      StringBuffer sb = null;
      String line = null;
      int counter = 0;
      Matcher matcher = null;
      String startId = null;
      String endId = null;
      int offset = 0;
      DLRToken parent = null;
      DLRToken current = null;
      FElement elem = null;
      Iterator fujaba__IterCurrentToRef = null;
      ElementReference ref = null;
      CodeWritingEngine writer = null;
      DLRToken newToken = null;

      // story pattern successor
      try 
      {
         fujaba__Success = false; 

         pattern = Pattern.compile(DLR_COMMENT_PATTERN_STRING);

         // check object pattern is really bound
         JavaSDM.ensure ( pattern != null );
         reader = new BufferedReader (new StringReader (code));

         // check object reader is really bound
         JavaSDM.ensure ( reader != null );
         tool = DLRTool.get();

         // check object tool is really bound
         JavaSDM.ensure ( tool != null );
         // search to-one link current from tool to proj
         _TmpObject = tool.getToken ();

         // ensure correct type and really bound of object proj
         JavaSDM.ensure ( _TmpObject instanceof DLRProjectToken );
         proj = (DLRProjectToken) _TmpObject;



         // create object sb
         sb = new StringBuffer ( );

         // collabStat call
         line = "";
         // collabStat call
         counter = 0;
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      try 
      {
      while ( (line = reader.readLine()) != null )
      {
         // story pattern storypatternwiththis
         try 
         {
            fujaba__Success = false; 

            matcher = pattern.matcher (line);

            // check object matcher is really bound
            JavaSDM.ensure ( matcher != null );
            // collabStat call
            counter = counter + 1;
            fujaba__Success = true;
         }
         catch ( JavaSDMException fujaba__InternalException )
         {
            fujaba__Success = false;
         }

         while ( matcher.find() )
         {
            // story pattern storypatternwiththis
            try 
            {
               fujaba__Success = false; 

               // check object matcher is really bound
               JavaSDM.ensure ( matcher != null );
               // check object sb is really bound
               JavaSDM.ensure ( sb != null );
               // collabStat call
               startId = matcher.group (1);
               // collabStat call
               endId = matcher.group (2);
               // collabStat call
               matcher.appendReplacement(sb, "");
               // collabStat call
               offset = sb.length();
               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }

            if ( startId != null )
            {
               // // workaround for to-one searches
               // story pattern 
               try 
               {
                  fujaba__Success = false; 

                  // collabStat call
                  this.copyExisting (Long.parseLong(startId), proj);
                  fujaba__Success = true;
               }
               catch ( JavaSDMException fujaba__InternalException )
               {
                  fujaba__Success = false;
               }

               // story pattern storypatternwiththis
               try 
               {
                  fujaba__Success = false; 

                  // check object proj is really bound
                  JavaSDM.ensure ( proj != null );
                  // check object tool is really bound
                  JavaSDM.ensure ( tool != null );
                  // search to-one link current from tool to current
                  current = tool.getToken ();

                  // check object current is really bound
                  JavaSDM.ensure ( current != null );

                  // search to-one link tokenByID from proj to newToken
                  newToken = proj.getFromTokenByID (Long.parseLong(startId));

                  // check object newToken is really bound
                  JavaSDM.ensure ( newToken != null );

                  // check isomorphic binding between objects newToken and current
                  JavaSDM.ensure ( !newToken.equals (current) );



                  // destroy link current from tool to current
                  tool.setToken (null);
                  // assign attribute newToken
                  newToken.setStartLine (counter);
                  // assign attribute newToken
                  newToken.setOffset (offset);
                  // create link children from newToken to current
                  newToken.setParent (current);

                  // create link current from tool to newToken
                  tool.setToken (newToken);

                  fujaba__Success = true;
               }
               catch ( JavaSDMException fujaba__InternalException )
               {
                  fujaba__Success = false;
               }


            }
            else
            {
               // story pattern storypatternwiththis
               try 
               {
                  fujaba__Success = false; 

                  // check object tool is really bound
                  JavaSDM.ensure ( tool != null );
                  // search to-one link current from tool to current
                  current = tool.getToken ();

                  // check object current is really bound
                  JavaSDM.ensure ( current != null );

                  // search to-one link children from current to parent
                  _TmpObject = current.getParent ();

                  // ensure correct type and really bound of object parent
                  JavaSDM.ensure ( _TmpObject instanceof DLRToken );
                  parent = (DLRToken) _TmpObject;


                  // check isomorphic binding between objects parent and current
                  JavaSDM.ensure ( !parent.equals (current) );


                  // attribute condition id == Long.parseLong(endId)
                  JavaSDM.ensure ( current.getId () == Long.parseLong(endId) );


                  // destroy link current from tool to current
                  tool.setToken (null);
                  // assign attribute current
                  current.setEndLine (counter);
                  // assign attribute current
                  current.setLength (offset - current.getOffset());
                  // create link current from tool to parent
                  tool.setToken (parent);

                  fujaba__Success = true;
               }
               catch ( JavaSDMException fujaba__InternalException )
               {
                  fujaba__Success = false;
               }

               if ( !( fujaba__Success ) )
               {
                  // story pattern 
                  try 
                  {
                     fujaba__Success = false; 

                     // check object current is really bound
                     JavaSDM.ensure ( current != null );
                     // iterate to-many link elements from current to ref
                     fujaba__Success = false;
                     fujaba__IterCurrentToRef = current.iteratorOfElements ();

                     while ( !(fujaba__Success) && fujaba__IterCurrentToRef.hasNext () )
                     {
                        try
                        {
                           ref = (ElementReference) fujaba__IterCurrentToRef.next ();

                           // check object ref is really bound
                           JavaSDM.ensure ( ref != null );
                           // search to-one link element from ref to elem
                           elem = ref.getElement ();

                           // check object elem is really bound
                           JavaSDM.ensure ( elem != null );



                           fujaba__Success = true;
                        }
                        catch ( JavaSDMException fujaba__InternalException )
                        {
                           fujaba__Success = false;
                        }
                     }
                     JavaSDM.ensure (fujaba__Success);
                     fujaba__Success = true;
                  }
                  catch ( JavaSDMException fujaba__InternalException )
                  {
                     fujaba__Success = false;
                  }

                  // story pattern storypatternwiththis
                  try 
                  {
                     fujaba__Success = false; 

                     // search to-one link generators from this to writer
                     writer = this.getEngine ();

                     // check object writer is really bound
                     JavaSDM.ensure ( writer != null );


                     // collabStat call
                     writer.internalError ("EndID does not match StartID.", elem);
                     fujaba__Success = true;
                  }
                  catch ( JavaSDMException fujaba__InternalException )
                  {
                     fujaba__Success = false;
                  }


               }

            }

         }
         // story pattern storypatternwiththis
         try 
         {
            fujaba__Success = false; 

            // check object matcher is really bound
            JavaSDM.ensure ( matcher != null );
            // check object sb is really bound
            JavaSDM.ensure ( sb != null );
            // collabStat call
            matcher.appendTail (sb);
            // collabStat call
            sb.append ("\n");
            fujaba__Success = true;
         }
         catch ( JavaSDMException fujaba__InternalException )
         {
            fujaba__Success = false;
         }


      }
      } catch (IOException e)
      {
         e.printStackTrace();
      }
      return sb.toString();
   }

   public String generateCode (Token operation )
   {
      boolean fujaba__Success = false;
      Object _TmpObject = null;
      ASGElementToken asgToken = null;
      DLRTool tool = null;
      FFile file = null;
      CodeWritingEngine codegen = null;
      String code = null;
      String cleanedCode = null;

      // story pattern 
      try 
      {
         fujaba__Success = false; 

         _TmpObject = operation;

         // ensure correct type and really bound of object asgToken
         JavaSDM.ensure ( _TmpObject instanceof ASGElementToken );
         asgToken = (ASGElementToken) _TmpObject;

         tool = DLRTool.get();

         // check object tool is really bound
         JavaSDM.ensure ( tool != null );
         // search to-one link element from asgToken to file
         _TmpObject = asgToken.getElement ();

         // ensure correct type and really bound of object file
         JavaSDM.ensure ( _TmpObject instanceof FFile );
         file = (FFile) _TmpObject;



         // attribute condition includeDLR == true
         JavaSDM.ensure ( tool.isIncludeDLR () == true );

         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( !( fujaba__Success ) )
      {
         return null;

      }
      // story pattern 
      try 
      {
         fujaba__Success = false; 

         // search to-one link generators from this to codegen
         codegen = this.getEngine ();

         // check object codegen is really bound
         JavaSDM.ensure ( codegen != null );


         // collabStat call
         code = codegen.generateCode (operation, this);
         // collabStat call
         cleanedCode = this.createDLRTree (code);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // story pattern 
      try 
      {
         fujaba__Success = false; 

         // check object tool is really bound
         JavaSDM.ensure ( tool != null );
         // attribute condition createFiles == true
         JavaSDM.ensure ( this.isCreateFiles () == true );

         // attribute condition generateSMAP == true
         JavaSDM.ensure ( tool.isGenerateSMAP () == true );

         // collabStat call
         this.writeCodeToFile (asgToken, generateSMAP (file));
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      return cleanedCode;
   }

   private String generateSMAP (FFile file )
   {
      boolean fujaba__Success = false;
      DLRTool tool = null;
      DLRToken token = null;
      File projectFile = null;
      FProject project = null;
      StringBuilder sb = null;

      // story pattern 
      try 
      {
         fujaba__Success = false; 

         tool = DLRTool.get();

         // check object tool is really bound
         JavaSDM.ensure ( tool != null );
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // story pattern storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         token = tool.findToken (file);

         // check object token is really bound
         JavaSDM.ensure ( token != null );
         // check object file is really bound
         JavaSDM.ensure ( file != null );
         // search to-one link project from file to project
         project = file.getProject ();

         // check object project is really bound
         JavaSDM.ensure ( project != null );

         // search to-one link file from project to projectFile
         projectFile = project.getFile ();

         // check object projectFile is really bound
         JavaSDM.ensure ( projectFile != null );



         // create object sb
         sb = new StringBuilder ( );

         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( !( fujaba__Success ) )
      {
         return null;

      }
      // story pattern storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         // check object sb is really bound
         JavaSDM.ensure ( sb != null );
         // collabStat call
         sb.append("SMAP\n");
         // collabStat call
         sb.append(getFileName(token));
         // collabStat call
         sb.append(".java\nFujaba\n*S Fujaba\n*F\n+ 1 ");
         // collabStat call
         sb.append(projectFile.getName());
         // collabStat call
         sb.append("\n");
         // collabStat call
         sb.append(projectFile.getName());
         // collabStat call
         sb.append("\n*L\n");
         // collabStat call
         this.appendSMAPCode (token, tool, sb);
         // collabStat call
         sb.append("*E");
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      return sb.toString();
   }

   public String getSMAPLine (DLRToken token , DLRTool tool , int startLine , int endLine )
   {
      boolean fujaba__Success = false;
      int diff = 0;

      // story pattern successor
      try 
      {
         fujaba__Success = false; 

         // collabStat call
         diff = endLine - startLine;
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( !( diff == 0 ) )
      {
         return token.getId() + "#1:" + startLine + (diff > 1 ? "," + diff : "") + "\n";

      }
      return "";
   }

}


