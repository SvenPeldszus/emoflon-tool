/*
 * generated by Fujaba - CodeGen2
 */
package de.uni_kassel.fujaba.codegen.rules.engine;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;

import de.uni_kassel.fujaba.codegen.rules.ExecuteStoryPatternOperation;
import de.uni_kassel.fujaba.codegen.rules.PreCondition;
import de.uni_kassel.fujaba.codegen.rules.SearchOperation;
import de.uni_kassel.fujaba.codegen.rules.Token;
import de.uni_kassel.fujaba.codegen.rules.UMLObjectRef;
import de.uni_paderborn.fujaba.uml.behavior.UMLObject;
import de.upb.tools.sdm.JavaSDM; // requires Fujaba5/libs/RuntimeTools.jar in classpath
import de.upb.tools.sdm.JavaSDMException;


public class OtherPreconditionsMutator extends PlanMutator
{


   protected boolean addOperation (ExecuteStoryPatternOperation plan , Token operation )
   {
      boolean fujaba__Success = false;
      Token parent = null;
      Set deps = null;
      Object _TmpObject = null;
      PreCondition preCond = null;
      Token newParent = null;
      Token subTreeRoot = null;
      Token root = null;
      Token otherRoot = null;

      // story pattern successor
      try 
      {
         fujaba__Success = false; 

         parent = plan;

         // check object parent is really bound
         JavaSDM.ensure ( parent != null );
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // story pattern successor
      try 
      {
         fujaba__Success = false; 

         deps = getDependencies (plan, operation);

         // check object deps is really bound
         JavaSDM.ensure ( deps != null );
         _TmpObject = operation;

         // ensure correct type and really bound of object preCond
         JavaSDM.ensure ( _TmpObject instanceof PreCondition );
         preCond = (PreCondition) _TmpObject;

         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( !( fujaba__Success ) )
      {
         getEngine ().internalError ("Not a PreCondition", null);
         return false;

      }
      if ( deps.size () == 0 )
      {
         // story pattern successor
         try 
         {
            fujaba__Success = false; 

            // check object operation is really bound
            JavaSDM.ensure ( operation != null );
            // check object parent is really bound
            JavaSDM.ensure ( parent != null );
            // check isomorphic binding between objects parent and operation
            JavaSDM.ensure ( !parent.equals (operation) );

            // create link children from operation to parent
            operation.setParent (parent);

            fujaba__Success = true;
         }
         catch ( JavaSDMException fujaba__InternalException )
         {
            fujaba__Success = false;
         }

         return true;

      }
      while( true )
      {
         // story pattern successor
         try 
         {
            fujaba__Success = false; 

            newParent = getCheapest (parent, deps);

            // check object newParent is really bound
            JavaSDM.ensure ( newParent != null );
            // check object deps is really bound
            JavaSDM.ensure ( deps != null );
            // check link contains from deps to newParent
            JavaSDM.ensure (deps.contains (newParent));

            // destroy link contains from deps to newParent
            deps.remove (newParent);
            fujaba__Success = true;
         }
         catch ( JavaSDMException fujaba__InternalException )
         {
            fujaba__Success = false;
         }



      	// loop termination check 
      	if ( !( fujaba__Success ) )
      	{
      		break;
      	}
	
         // story pattern Successor of successor
         try 
         {
            fujaba__Success = false; 

            // check object newParent is really bound
            JavaSDM.ensure ( newParent != null );
            // check object parent is really bound
            JavaSDM.ensure ( parent != null );
            // check isomorphic binding between objects parent and newParent
            JavaSDM.ensure ( !parent.equals (newParent) );

            fujaba__Success = true;
         }
         catch ( JavaSDMException fujaba__InternalException )
         {
            fujaba__Success = false;
         }

         if ( fujaba__Success )
         {
            // story pattern Successor of Successor of successor
            try 
            {
               fujaba__Success = false; 

               subTreeRoot = newParent.getChildOfLeastCommonAncestor (parent);

               // check object subTreeRoot is really bound
               JavaSDM.ensure ( subTreeRoot != null );
               // search to-one link children from subTreeRoot to root
               root = subTreeRoot.getParent ();

               // check object root is really bound
               JavaSDM.ensure ( root != null );

               // check isomorphic binding between objects subTreeRoot and root
               JavaSDM.ensure ( !subTreeRoot.equals (root) );


               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }

            if ( !( fujaba__Success ) )
            {
               return false;

            }
            // story pattern successor
            try 
            {
               fujaba__Success = false; 

               otherRoot = parent.getChildOfLeastCommonAncestor (root);

               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }

            // story pattern 
            try 
            {
               fujaba__Success = false; 

               // check object subTreeRoot is really bound
               JavaSDM.ensure ( subTreeRoot != null );
               // check optional
               if (otherRoot != null)
               {
                  // check isomorphic binding between objects otherRoot and subTreeRoot
                  JavaSDM.ensure ( !otherRoot.equals (subTreeRoot) );

               }   fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }

            if ( fujaba__Success )
            {
               // story pattern successor
               try 
               {
                  fujaba__Success = false; 

                  parent = join (otherRoot, parent, subTreeRoot, newParent);

                  // check object parent is really bound
                  JavaSDM.ensure ( parent != null );
                  fujaba__Success = true;
               }
               catch ( JavaSDMException fujaba__InternalException )
               {
                  fujaba__Success = false;
               }

               if ( !( fujaba__Success ) )
               {
                  return false;

               }

            }

         }

      }
      // story pattern Successor of successor
      try 
      {
         fujaba__Success = false; 

         // check object operation is really bound
         JavaSDM.ensure ( operation != null );
         // check object parent is really bound
         JavaSDM.ensure ( parent != null );
         // check isomorphic binding between objects parent and operation
         JavaSDM.ensure ( !parent.equals (operation) );

         // create link children from parent to operation
         parent.addToChildren (operation);

         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      return true;
   }

   protected Token getCheapest (Token parent , Set deps )
   {
      boolean fujaba__Success = false;
      OperationComparator comp = null;
      double cheapestCost = 0.0;
      Token ancestor = null;
      ExecutionPlanEngine engine = null;
      double cost = 0.0;
      Token cheapest = null;
      Iterator fujaba__IterDepsToDep = null;
      Object _TmpObject = null;
      Token dep = null;

      // story pattern successor
      try 
      {
         fujaba__Success = false; 

         // create object comp
         comp = new OperationComparator ( );

         // collabStat call
         cheapestCost = 0;
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // story pattern successor
      try 
      {
         fujaba__Success = false; 

         // check object deps is really bound
         JavaSDM.ensure ( deps != null );
         // check object parent is really bound
         JavaSDM.ensure ( parent != null );
         // check link contains from deps to parent
         JavaSDM.ensure (deps.contains (parent));

         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( fujaba__Success )
      {
         return parent;

      }
      // story pattern Successor of successor
      try 
      {
         fujaba__Success = false; 

         // check object deps is really bound
         JavaSDM.ensure ( deps != null );
         // iterate to-many link contains from deps to dep
         fujaba__Success = false;
         fujaba__IterDepsToDep = deps.iterator ();

         while ( fujaba__IterDepsToDep.hasNext () )
         {
            try
            {
               _TmpObject =  fujaba__IterDepsToDep.next ();

               // ensure correct type and really bound of object dep
               JavaSDM.ensure ( _TmpObject instanceof Token );
               dep = (Token) _TmpObject;

               // story pattern Successor of Successor of successor
               try 
               {
                  fujaba__Success = false; 

                  ancestor = dep.getChildOfLeastCommonAncestor (parent);

                  // check object ancestor is really bound
                  JavaSDM.ensure ( ancestor != null );
                  fujaba__Success = true;
               }
               catch ( JavaSDMException fujaba__InternalException )
               {
                  fujaba__Success = false;
               }

               if ( fujaba__Success )
               {
                  // story pattern successor
                  try 
                  {
                     fujaba__Success = false; 

                     // search to-one link mutators from this to engine
                     engine = this.getEngine ();

                     // check object engine is really bound
                     JavaSDM.ensure ( engine != null );


                     // collabStat call
                     cost = engine.getPathCost (ancestor, dep);
                     fujaba__Success = true;
                  }
                  catch ( JavaSDMException fujaba__InternalException )
                  {
                     fujaba__Success = false;
                  }

                  // story pattern 
                  try 
                  {
                     fujaba__Success = false; 

                     // check object cheapest is really bound
                     JavaSDM.ensure ( cheapest != null );
                     // constraint isNegativeSearch(cheapest) && !isNegativeSearch(dep)
                     JavaSDM.ensure ( isNegativeSearch(cheapest) && !isNegativeSearch(dep) );
                     // collabStat call
                     cheapestCost = cost + 1;
                     fujaba__Success = true;
                  }
                  catch ( JavaSDMException fujaba__InternalException )
                  {
                     fujaba__Success = false;
                  }

                  // story pattern successor
                  try 
                  {
                     fujaba__Success = false; 

                     // check object cheapest is really bound
                     JavaSDM.ensure ( cheapest != null );
                     // constraint (cheapestCost < cost) || (isNegativeSearch(dep) && !isNegativeSearch(cheapest))
                     JavaSDM.ensure ( (cheapestCost < cost) || (isNegativeSearch(dep) && !isNegativeSearch(cheapest)) );
                     fujaba__Success = true;
                  }
                  catch ( JavaSDMException fujaba__InternalException )
                  {
                     fujaba__Success = false;
                  }

                  if ( !( fujaba__Success ) )
                  {
                     if ( (cheapestCost == cost) && (cheapest != null) )
                     {
                        if ( comp.compare (cheapest, dep) > 0 )
                        {
                           // story pattern 
                           try 
                           {
                              fujaba__Success = false; 

                              cheapest = dep;

                              // check object cheapest is really bound
                              JavaSDM.ensure ( cheapest != null );
                              fujaba__Success = true;
                           }
                           catch ( JavaSDMException fujaba__InternalException )
                           {
                              fujaba__Success = false;
                           }


                        }

                     }
                     else
                     {
                        // story pattern Successor of successor
                        try 
                        {
                           fujaba__Success = false; 

                           cheapest = dep;

                           // check object cheapest is really bound
                           JavaSDM.ensure ( cheapest != null );
                           // collabStat call
                           cheapestCost = cost;
                           fujaba__Success = true;
                        }
                        catch ( JavaSDMException fujaba__InternalException )
                        {
                           fujaba__Success = false;
                        }


                     }

                  }

               }

               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      return cheapest;
   }

   protected Set getDependencies (ExecuteStoryPatternOperation plan , Token op )
   {
      boolean fujaba__Success = false;
      ExecutionPlanEngine engine = null;
      Set deps = null;
      Token leastCommonAncestor = null;
      Iterator fujaba__IterDepsToDep = null;
      Object _TmpObject = null;
      Token dep = null;
      HashSet completeDeps = null;
      Token currentDep = null;

      // story pattern successor
      try 
      {
         fujaba__Success = false; 

         // search to-one link mutators from this to engine
         engine = this.getEngine ();

         // check object engine is really bound
         JavaSDM.ensure ( engine != null );


         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // story pattern storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         deps = engine.getNestedDependencies (plan, op);

         // check object deps is really bound
         JavaSDM.ensure ( deps != null );
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // story pattern storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         // check object deps is really bound
         JavaSDM.ensure ( deps != null );
         // iterate to-many link contains from deps to dep
         fujaba__Success = false;
         fujaba__IterDepsToDep = deps.iterator ();

         while ( fujaba__IterDepsToDep.hasNext () )
         {
            try
            {
               _TmpObject =  fujaba__IterDepsToDep.next ();

               // ensure correct type and really bound of object dep
               JavaSDM.ensure ( _TmpObject instanceof Token );
               dep = (Token) _TmpObject;

               if ( leastCommonAncestor == null )
               {
                  // story pattern successor
                  try 
                  {
                     fujaba__Success = false; 

                     leastCommonAncestor = dep;

                     // check object leastCommonAncestor is really bound
                     JavaSDM.ensure ( leastCommonAncestor != null );
                     fujaba__Success = true;
                  }
                  catch ( JavaSDMException fujaba__InternalException )
                  {
                     fujaba__Success = false;
                  }


               }
               else
               {
                  // story pattern successor
                  try 
                  {
                     fujaba__Success = false; 

                     leastCommonAncestor = dep.getLeastCommonAncestor(leastCommonAncestor);

                     // check object leastCommonAncestor is really bound
                     JavaSDM.ensure ( leastCommonAncestor != null );
                     fujaba__Success = true;
                  }
                  catch ( JavaSDMException fujaba__InternalException )
                  {
                     fujaba__Success = false;
                  }

                  if ( !( fujaba__Success ) )
                  {
                     throw new IllegalStateException("Cannot find common ancestor of dependent Tokens!");

                  }

               }

               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // story pattern 
      try 
      {
         fujaba__Success = false; 

         // create object completeDeps
         completeDeps = new HashSet (deps);

         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // story pattern Successor of storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         // check object dep is really bound
         JavaSDM.ensure ( dep != null );
         // check object deps is really bound
         JavaSDM.ensure ( deps != null );
         // check link contains from deps to dep
         JavaSDM.ensure (deps.contains (dep));

         // collabStat call
         currentDep = dep;
         while ( currentDep != leastCommonAncestor  )
         {
            // story pattern 
            try 
            {
               fujaba__Success = false; 

               // check object completeDeps is really bound
               JavaSDM.ensure ( completeDeps != null );
               // check object currentDep is really bound
               JavaSDM.ensure ( currentDep != null );
               // create link contains from completeDeps to currentDep
               completeDeps.add (currentDep);

               // collabStat call
               currentDep = currentDep.getParent();
               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }


         }
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      return completeDeps;
   }

   public boolean isNegativeSearch (Token token )
   {
      boolean fujaba__Success = false;
      Object _TmpObject = null;
      SearchOperation search = null;
      UMLObject obj = null;
      UMLObjectRef objRef = null;

      // story pattern 
      try 
      {
         fujaba__Success = false; 

         _TmpObject = token;

         // ensure correct type and really bound of object search
         JavaSDM.ensure ( _TmpObject instanceof SearchOperation );
         search = (SearchOperation) _TmpObject;

         // search to-one link subject from search to objRef
         objRef = search.getSubject ();

         // check object objRef is really bound
         JavaSDM.ensure ( objRef != null );

         // search to-one link ref from objRef to obj
         obj = objRef.getRef ();

         // check object obj is really bound
         JavaSDM.ensure ( obj != null );

         // attribute condition type != UMLObject.NORM
         JavaSDM.ensure ( obj.getType () != UMLObject.NORM );



         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( fujaba__Success )
      {
         return true;

      }
      return false;
   }

   protected Token join (Token root1 , Token to1 , Token root2 , Token to2 )
   {
      boolean fujaba__Success = false;

      // story pattern successor
      try 
      {
         fujaba__Success = false; 

         // check object root2 is really bound
         JavaSDM.ensure ( root2 != null );
         // check object to1 is really bound
         JavaSDM.ensure ( to1 != null );
         // check isomorphic binding between objects to1 and root2
         JavaSDM.ensure ( !to1.equals (root2) );

         // create link children from root2 to to1
         root2.setParent (to1);

         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      return to2;
   }

   public void mutate (ExecuteStoryPatternOperation plan )
   {
      boolean fujaba__Success = false;
      int count = 0;
      Token parent = null;
      Iterator fujaba__IterPlanToOperation = null;
      Object _TmpObject = null;
      Token operation = null;
      int last = 0;

      do
      {
         // story pattern successor
         try 
         {
            fujaba__Success = false; 

            // collabStat call
            count = 0;
            fujaba__Success = true;
         }
         catch ( JavaSDMException fujaba__InternalException )
         {
            fujaba__Success = false;
         }

         // story pattern successor
         try 
         {
            fujaba__Success = false; 

            // check object plan is really bound
            JavaSDM.ensure ( plan != null );
            // iterate to-many link operations from plan to operation
            fujaba__Success = false;
            fujaba__IterPlanToOperation = plan.iteratorOfOperations ();

            while ( fujaba__IterPlanToOperation.hasNext () )
            {
               try
               {
                  _TmpObject =  fujaba__IterPlanToOperation.next ();

                  // ensure correct type and really bound of object operation
                  JavaSDM.ensure ( _TmpObject instanceof Token );
                  operation = (Token) _TmpObject;

                  // check negative bindings
                  try
                  {
                     fujaba__Success = false;

                     // search to-one link children from operation to parent
                     parent = operation.getParent ();

                     // check object parent is really bound
                     JavaSDM.ensure ( parent != null );

                     // check isomorphic binding between objects parent and operation
                     JavaSDM.ensure ( !parent.equals (operation) );



                     fujaba__Success = true;
                  }
                  catch ( JavaSDMException fujaba__InternalException )
                  {
                     fujaba__Success = false;
                  }

                  fujaba__Success = !(fujaba__Success);

                  JavaSDM.ensure ( fujaba__Success );

                  // check isomorphic binding between objects plan and operation
                  JavaSDM.ensure ( !plan.equals (operation) );

                  // constraint operation instanceof PreCondition
                  JavaSDM.ensure ( operation instanceof PreCondition );
                  // collabStat call
                  count = count + 1;
                  // collabStat call
                  addOperation (plan, operation);

                  fujaba__Success = true;
               }
               catch ( JavaSDMException fujaba__InternalException )
               {
                  fujaba__Success = false;
               }
            }
            JavaSDM.ensure (fujaba__Success);
            fujaba__Success = true;
         }
         catch ( JavaSDMException fujaba__InternalException )
         {
            fujaba__Success = false;
         }

         // story pattern successor
         try 
         {
            fujaba__Success = false; 

            // constraint (last == 0) || (count < last)
            JavaSDM.ensure ( (last == 0) || (count < last) );
            // constraint count > 0
            JavaSDM.ensure ( count > 0 );
            // collabStat call
            last = count;
            fujaba__Success = true;
         }
         catch ( JavaSDMException fujaba__InternalException )
         {
            fujaba__Success = false;
         }


      }
      while ( fujaba__Success );if ( count > 0 )
      {
         return ;

      }
      return ;
   }

}


