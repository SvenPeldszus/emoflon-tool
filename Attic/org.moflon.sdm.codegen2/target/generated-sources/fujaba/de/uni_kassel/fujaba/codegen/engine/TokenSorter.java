/*
 * generated by Fujaba - CodeGen2
 */
package de.uni_kassel.fujaba.codegen.engine;
import java.util.Collections;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.List;

import de.uni_kassel.features.ReferenceHandler; // requires Fujaba5/libs/features.jar in classpath
import de.uni_kassel.features.annotation.util.Property; // requires Fujaba5/libs/features.jar in classpath
import de.uni_kassel.fujaba.codegen.rules.Token;
import de.upb.tools.sdm.JavaSDM; // requires Fujaba5/libs/RuntimeTools.jar in classpath
import de.upb.tools.sdm.JavaSDMException;


public abstract class TokenSorter extends TokenTreeMutatorEngine
{


   /**
    * <pre>
    *           0..1     comparator     0..1
    * TokenSorter ------------------------> Comparator
    *           tokenSorter               comparator
    * </pre>
    */
   public static final String PROPERTY_COMPARATOR = "comparator";

   @Property( name = PROPERTY_COMPARATOR, kind = ReferenceHandler.ReferenceKind.TO_ONE,
         adornment = ReferenceHandler.Adornment.NONE)
   private Comparator comparator;

   @Property( name = PROPERTY_COMPARATOR )
   public boolean setComparator (Comparator value)
   {
      boolean changed = false;

      if (this.comparator != value)
      {
      
         Comparator oldValue = this.comparator;
         this.comparator = value;
         changed = true;
      
      }
      return changed;
   }

   @Property( name = PROPERTY_COMPARATOR )
   public TokenSorter withComparator (Comparator value)
   {
      setComparator (value);
      return this;
   }

   public Comparator getComparator ()
   {
      return this.comparator;
   }

   public abstract boolean isResponsibleFor (Token token );

   public boolean mutateTree (Token token )
   {
      boolean fujaba__Success = false;
      Comparator comp = null;
      List list = null;
      LinkedList tmpList = null;

      // story pattern 
      try 
      {
         fujaba__Success = false; 

         // constraint isResponsibleFor (token)
         JavaSDM.ensure ( isResponsibleFor (token) );
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( !( fujaba__Success ) )
      {
         return true;

      }
      // story pattern 
      try 
      {
         fujaba__Success = false; 

         // search to-one link comparator from this to comp
         comp = this.getComparator ();

         // check object comp is really bound
         JavaSDM.ensure ( comp != null );


         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( !( fujaba__Success ) )
      {
         throw new RuntimeException("failed to find Comparator or children");

      }
      // story pattern storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         list = token.getChildrenList();

         // check object list is really bound
         JavaSDM.ensure ( list != null );
         // check object comp is really bound
         JavaSDM.ensure ( comp != null );
         // create object tmpList
         tmpList = new LinkedList ( );

         // collabStat call
         tmpList.addAll (list);
         // collabStat call
         Collections.sort (tmpList, comp);
         // collabStat call
         list.clear();
         // collabStat call
         list.addAll (tmpList);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      return true;
   }

   public void removeYou()
   {
      this.setComparator (null);
      super.removeYou ();
   }
}


