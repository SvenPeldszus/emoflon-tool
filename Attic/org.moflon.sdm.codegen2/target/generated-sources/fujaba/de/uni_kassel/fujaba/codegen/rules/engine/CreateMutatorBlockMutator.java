/*
 * generated by Fujaba - CodeGen2
 */
package de.uni_kassel.fujaba.codegen.rules.engine;

import java.util.Iterator;

import de.uni_kassel.fujaba.codegen.rules.ExecuteStoryPatternOperation;
import de.uni_kassel.fujaba.codegen.rules.ForEachMutatorBlock;
import de.uni_kassel.fujaba.codegen.rules.MutatingOperation;
import de.uni_kassel.fujaba.codegen.rules.MutatorBlock;
import de.uni_kassel.fujaba.codegen.rules.Token;
import de.uni_paderborn.fujaba.uml.behavior.UMLStoryActivity;
import de.uni_paderborn.fujaba.uml.behavior.UMLStoryPattern;
import de.uni_paderborn.fujaba.uml.behavior.UMLTransition;
import de.uni_paderborn.fujaba.uml.behavior.UMLTransitionGuard;
import de.upb.tools.sdm.JavaSDM; // requires Fujaba5/libs/RuntimeTools.jar in classpath
import de.upb.tools.sdm.JavaSDMException;


public class CreateMutatorBlockMutator extends PlanMutator
{


   public void mutate (ExecuteStoryPatternOperation plan )
   {
      boolean fujaba__Success = false;
      UMLStoryActivity storyAct = null;
      UMLStoryPattern storyPattern = null;
      UMLTransitionGuard guard = null;
      Iterator fujaba__IterStoryActToTrans = null;
      UMLTransition trans = null;
      Iterator fujaba__IterPlanToMutator = null;
      Object _TmpObject = null;
      Token mutator = null;
      MutatorBlock mutatorBlock = null;

      // story pattern successor
      try 
      {
         fujaba__Success = false; 

         // check object plan is really bound
         JavaSDM.ensure ( plan != null );
         // search to-one link storyPattern from plan to storyPattern
         storyPattern = plan.getStoryPattern ();

         // check object storyPattern is really bound
         JavaSDM.ensure ( storyPattern != null );

         // search to-one link storyPattern from storyPattern to storyAct
         storyAct = storyPattern.getRevStoryPattern ();

         // check object storyAct is really bound
         JavaSDM.ensure ( storyAct != null );



         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( !( fujaba__Success ) )
      {
         // story pattern 
         try 
         {
            fujaba__Success = false; 

            // collabStat call
            getEngine ().internalError ("StoryPattern or StoryActivity missing", null);
            fujaba__Success = true;
         }
         catch ( JavaSDMException fujaba__InternalException )
         {
            fujaba__Success = false;
         }

         return ;

      }
      // story pattern 
      try 
      {
         fujaba__Success = false; 

         // check object storyAct is really bound
         JavaSDM.ensure ( storyAct != null );
         // iterate to-many link exit from storyAct to trans
         fujaba__Success = false;
         fujaba__IterStoryActToTrans = storyAct.iteratorOfExit ();

         while ( !(fujaba__Success) && fujaba__IterStoryActToTrans.hasNext () )
         {
            try
            {
               trans = (UMLTransition) fujaba__IterStoryActToTrans.next ();

               // check object trans is really bound
               JavaSDM.ensure ( trans != null );
               // search to-one link guard from trans to guard
               guard = trans.getGuard ();

               // check object guard is really bound
               JavaSDM.ensure ( guard != null );

               // attribute condition type == UMLTransitionGuard.EVERYTIMES
               JavaSDM.ensure ( guard.getType () == UMLTransitionGuard.EVERYTIMES );



               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( !( fujaba__Success ) )
      {
         // story pattern successor
         try 
         {
            fujaba__Success = false; 

            // check object plan is really bound
            JavaSDM.ensure ( plan != null );
            // iterate to-many link operations from plan to mutator
            fujaba__Success = false;
            fujaba__IterPlanToMutator = plan.iteratorOfOperations ();

            while ( !(fujaba__Success) && fujaba__IterPlanToMutator.hasNext () )
            {
               try
               {
                  _TmpObject =  fujaba__IterPlanToMutator.next ();

                  // ensure correct type and really bound of object mutator
                  JavaSDM.ensure ( _TmpObject instanceof Token );
                  mutator = (Token) _TmpObject;

                  // check isomorphic binding between objects plan and mutator
                  JavaSDM.ensure ( !plan.equals (mutator) );

                  // constraint mutator instanceof MutatingOperation
                  JavaSDM.ensure ( mutator instanceof MutatingOperation );

                  fujaba__Success = true;
               }
               catch ( JavaSDMException fujaba__InternalException )
               {
                  fujaba__Success = false;
               }
            }
            JavaSDM.ensure (fujaba__Success);
            fujaba__Success = true;
         }
         catch ( JavaSDMException fujaba__InternalException )
         {
            fujaba__Success = false;
         }

         if ( !( fujaba__Success ) )
         {
            return ;

         }

      }
      // story pattern Successor of successor
      try 
      {
         fujaba__Success = false; 

         // check object storyAct is really bound
         JavaSDM.ensure ( storyAct != null );
         // attribute condition forEach == true
         JavaSDM.ensure ( storyAct.isForEach () == true );

         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( fujaba__Success )
      {
         // story pattern successor
         try 
         {
            fujaba__Success = false; 

            mutatorBlock = new ForEachMutatorBlock ();

            // check object mutatorBlock is really bound
            JavaSDM.ensure ( mutatorBlock != null );
            fujaba__Success = true;
         }
         catch ( JavaSDMException fujaba__InternalException )
         {
            fujaba__Success = false;
         }


      }
      else
      {
         // story pattern successor
         try 
         {
            fujaba__Success = false; 

            // create object mutatorBlock
            mutatorBlock = new MutatorBlock ( );

            fujaba__Success = true;
         }
         catch ( JavaSDMException fujaba__InternalException )
         {
            fujaba__Success = false;
         }


      }
      // story pattern Successor of successor
      try 
      {
         fujaba__Success = false; 

         // check object mutatorBlock is really bound
         JavaSDM.ensure ( mutatorBlock != null );
         // check object plan is really bound
         JavaSDM.ensure ( plan != null );
         // create link operations from plan to mutatorBlock
         plan.addToOperations (mutatorBlock);

         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      return ;
   }

}


