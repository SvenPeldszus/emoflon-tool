/*
 * generated by Fujaba - CodeGen2
 */
package de.uni_kassel.fujaba.codegen.emf;
import java.net.URL;
import java.util.Iterator;

import de.uni_kassel.fujaba.codegen.classdiag.FStyledElementCodeWriter;
import de.uni_kassel.fujaba.codegen.classdiag.InformationResetter;
import de.uni_kassel.fujaba.codegen.emf.writer.EMFCodeWritingEngine;
import de.uni_kassel.fujaba.codegen.emf.writer.EMFJavaFileCodeWriter;
import de.uni_kassel.fujaba.codegen.engine.CodeGeneration;
import de.uni_kassel.fujaba.codegen.engine.JavaCodeWritingEngine;
import de.uni_kassel.fujaba.codegen.engine.JavaTokenMutatorTemplateEngine;
import de.uni_paderborn.fujaba.metamodel.common.FFile;
import de.uni_paderborn.fujaba.metamodel.structure.FAttr;
import de.uni_paderborn.fujaba.metamodel.structure.FClass;
import de.uni_paderborn.fujaba.metamodel.structure.FRole;
import de.upb.lib.plugins.AbstractPlugin;
import de.upb.tools.sdm.JavaSDM; // requires Fujaba5/libs/RuntimeTools.jar in classpath
import de.upb.tools.sdm.JavaSDMException;


public class CodeGen2EMFPlugin extends AbstractPlugin
{


   public void createEMFJavaWriters (JavaCodeWritingEngine engine )
   {
      boolean fujaba__Success = false;
      Class attrClass = null;
      Class fileClass = null;
      Class umlClass = null;
      Class umlRole = null;
      Iterator fujaba__IterEngineToImportResetter = null;
      Object _TmpObject = null;
      InformationResetter importResetter = null;
      EMFJavaFileCodeWriter emfFileWriter = null;
      FStyledElementCodeWriter noAttrCodeWriter = null;
      FStyledElementCodeWriter noRoleCodeWriter = null;
      Iterator fujaba__IterEngineToDir = null;
      URL dir = null;
      URL emfDir = null;

      // // change java codegen for EMF
      // story pattern 
      try 
      {
         fujaba__Success = false; 

         attrClass = FAttr.class;

         // check object attrClass is really bound
         JavaSDM.ensure ( attrClass != null );
         fileClass = FFile.class;

         // check object fileClass is really bound
         JavaSDM.ensure ( fileClass != null );
         umlClass = FClass.class;

         // check object umlClass is really bound
         JavaSDM.ensure ( umlClass != null );
         umlRole = FRole.class;

         // check object umlRole is really bound
         JavaSDM.ensure ( umlRole != null );
         // check object engine is really bound
         JavaSDM.ensure ( engine != null );
         // check isomorphic binding between objects fileClass and attrClass
         JavaSDM.ensure ( !fileClass.equals (attrClass) );

         // check isomorphic binding between objects umlClass and attrClass
         JavaSDM.ensure ( !umlClass.equals (attrClass) );

         // check isomorphic binding between objects umlRole and attrClass
         JavaSDM.ensure ( !umlRole.equals (attrClass) );

         // check isomorphic binding between objects umlClass and fileClass
         JavaSDM.ensure ( !umlClass.equals (fileClass) );

         // check isomorphic binding between objects umlRole and fileClass
         JavaSDM.ensure ( !umlRole.equals (fileClass) );

         // check isomorphic binding between objects umlRole and umlClass
         JavaSDM.ensure ( !umlRole.equals (umlClass) );

         // iterate to-many link generators from engine to importResetter
         fujaba__Success = false;
         fujaba__IterEngineToImportResetter = engine.iteratorOfGenerators ();

         while ( !(fujaba__Success) && fujaba__IterEngineToImportResetter.hasNext () )
         {
            try
            {
               _TmpObject =  fujaba__IterEngineToImportResetter.next ();

               // ensure correct type and really bound of object importResetter
               JavaSDM.ensure ( _TmpObject instanceof InformationResetter );
               importResetter = (InformationResetter) _TmpObject;

               // check link responsibleFor from importResetter to umlClass
               JavaSDM.ensure (umlClass.equals (importResetter.getResponsible ()));


               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);
         // create object emfFileWriter
         emfFileWriter = new EMFJavaFileCodeWriter ( );

         // create object noAttrCodeWriter
         noAttrCodeWriter = new FStyledElementCodeWriter ( );

         // create object noRoleCodeWriter
         noRoleCodeWriter = new FStyledElementCodeWriter ( );

         // assign attribute noAttrCodeWriter
         noAttrCodeWriter.setStereotypeText ("emf");
         // assign attribute noRoleCodeWriter
         noRoleCodeWriter.setStereotypeText ("emf");
         // assign attribute emfFileWriter
         emfFileWriter.setTemplateName ("classDiag/class/emfFile.vm");
         // assign attribute emfFileWriter
         emfFileWriter.setStereotypeText ("emf");
         // create link responsibleFor from emfFileWriter to fileClass
         emfFileWriter.setResponsible (fileClass);

         // create link responsibleFor from noAttrCodeWriter to attrClass
         noAttrCodeWriter.setResponsible (attrClass);

         // create link responsibleFor from noRoleCodeWriter to umlRole
         noRoleCodeWriter.setResponsible (umlRole);

         // create link generators from engine to noRoleCodeWriter
         engine.addBeforeOfGenerators (importResetter, noRoleCodeWriter);

         // create link generators from engine to noAttrCodeWriter
         engine.addBeforeOfGenerators (noRoleCodeWriter, noAttrCodeWriter);

         // create link generators from engine to emfFileWriter
         engine.addBeforeOfGenerators (noAttrCodeWriter, emfFileWriter);

         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // story pattern appendDirs
      try 
      {
         fujaba__Success = false; 

         // check object emfFileWriter is really bound
         JavaSDM.ensure ( emfFileWriter != null );
         // check object engine is really bound
         JavaSDM.ensure ( engine != null );
         // iterate to-many link templateDirs from engine to dir
         fujaba__Success = false;
         fujaba__IterEngineToDir = engine.iteratorOfDirs ();

         while ( fujaba__IterEngineToDir.hasNext () )
         {
            try
            {
               dir = (URL) fujaba__IterEngineToDir.next ();

               // check object dir is really bound
               JavaSDM.ensure ( dir != null );
               // create link templateDirs from emfFileWriter to dir
               emfFileWriter.addToDir (dir);


               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // children
      // story pattern 
      try 
      {
         fujaba__Success = false; 

         emfDir = this.getClass().getClassLoader().getResource("templates/");

         // check object emfDir is really bound
         JavaSDM.ensure ( emfDir != null );
         // check object emfFileWriter is really bound
         JavaSDM.ensure ( emfFileWriter != null );
         // create link templateDirs from emfFileWriter to emfDir
         emfFileWriter.addToDir (emfDir);

         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }


      // exception
      catch( Exception e )
      {
         engine.error (e.toString(), null);

      }

      return ;
   }

   public boolean initialize ()
   {
      boolean fujaba__Success = false;
      CodeGeneration codegen = null;
      Iterator fujaba__IterEngineToJavaEngine = null;
      Object _TmpObject = null;
      JavaCodeWritingEngine javaEngine = null;
      Iterator fujaba__IterCodegenToEngine = null;
      JavaTokenMutatorTemplateEngine engine = null;
      EMFCodeWritingEngine emfEngine = null;
      EMFClassEngine classEngine = null;

      // story pattern 
      try 
      {
         fujaba__Success = false; 

         codegen = CodeGeneration.get();

         // check object codegen is really bound
         JavaSDM.ensure ( codegen != null );
         // iterate to-many link engines from codegen to engine
         fujaba__Success = false;
         fujaba__IterCodegenToEngine = codegen.iteratorOfEngines ();

         while ( !(fujaba__Success) && fujaba__IterCodegenToEngine.hasNext () )
         {
            try
            {
               _TmpObject =  fujaba__IterCodegenToEngine.next ();

               // ensure correct type and really bound of object engine
               JavaSDM.ensure ( _TmpObject instanceof JavaTokenMutatorTemplateEngine );
               engine = (JavaTokenMutatorTemplateEngine) _TmpObject;

               // iterate to-many link codeWriter from engine to javaEngine
               fujaba__Success = false;
               fujaba__IterEngineToJavaEngine = engine.iteratorOfCodeWriter ();

               while ( !(fujaba__Success) && fujaba__IterEngineToJavaEngine.hasNext () )
               {
                  try
                  {
                     _TmpObject =  fujaba__IterEngineToJavaEngine.next ();

                     // ensure correct type and really bound of object javaEngine
                     JavaSDM.ensure ( _TmpObject instanceof JavaCodeWritingEngine );
                     javaEngine = (JavaCodeWritingEngine) _TmpObject;


                     fujaba__Success = true;
                  }
                  catch ( JavaSDMException fujaba__InternalException )
                  {
                     fujaba__Success = false;
                  }
               }
               JavaSDM.ensure (fujaba__Success);

               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);
         // create object emfEngine
         emfEngine = new EMFCodeWritingEngine ( );

         // create object classEngine
         classEngine = new EMFClassEngine ( );

         // create link codeWriter from emfEngine to engine
         emfEngine.setEngine (engine);

         // create link tokenCreators from engine to classEngine
         engine.addToTokenCreators (0, classEngine);

         // collabStat call
         this.createEMFJavaWriters (javaEngine);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( fujaba__Success )
      {
         return true;

      }
      return false;
   }

   public void removeYou()
   {
   }
}


