/*
 * generated by Fujaba - CodeGen2
 */
package de.uni_kassel.fujaba.codegen.rules.engine;
import java.util.Iterator;
import java.util.Set;

import de.uni_kassel.fujaba.codegen.rules.AttributeAssignmentOperation;
import de.uni_kassel.fujaba.codegen.rules.CreateLinkOperation;
import de.uni_kassel.fujaba.codegen.rules.CreateObjectOperation;
import de.uni_kassel.fujaba.codegen.rules.DestroyLinkOperation;
import de.uni_kassel.fujaba.codegen.rules.ExecuteStoryPatternOperation;
import de.uni_kassel.fujaba.codegen.rules.Token;
import de.uni_kassel.fujaba.codegen.rules.UMLLinkRef;
import de.uni_kassel.fujaba.codegen.rules.UMLObjectRef;
import de.uni_paderborn.fujaba.metamodel.structure.FQualifier;
import de.uni_paderborn.fujaba.metamodel.structure.FRole;
import de.uni_paderborn.fujaba.uml.behavior.UMLLink;
import de.uni_paderborn.fujaba.uml.behavior.UMLObject;
import de.upb.tools.sdm.JavaSDM; // requires Fujaba5/libs/RuntimeTools.jar in classpath
import de.upb.tools.sdm.JavaSDMException;


public class CreateLinksDependencies extends OperationDependencies
{


   public void getDependencies (ExecuteStoryPatternOperation plan , Token operation , Set dependencies )
   {
      boolean fujaba__Success = false;
      Object _TmpObject = null;
      CreateLinkOperation createLink = null;
      Iterator fujaba__IterPlanToCreateObj = null;
      CreateObjectOperation createObj = null;
      Iterator fujaba__IterPlanToDeleteLink = null;
      DestroyLinkOperation deleteLink = null;
      Iterator fujaba__IterPlanToAssign = null;
      AttributeAssignmentOperation assign = null;
      Iterator fujaba__IterPlanToOtherCreateLink = null;
      CreateLinkOperation otherCreateLink = null;

      // story pattern 
      try 
      {
         fujaba__Success = false; 

         _TmpObject = operation;

         // ensure correct type and really bound of object createLink
         JavaSDM.ensure ( _TmpObject instanceof CreateLinkOperation );
         createLink = (CreateLinkOperation) _TmpObject;

         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( !( fujaba__Success ) )
      {
         return ;

      }
      // story pattern 
      try 
      {
         fujaba__Success = false; 

         // check object dependencies is really bound
         JavaSDM.ensure ( dependencies != null );
         // check object plan is really bound
         JavaSDM.ensure ( plan != null );
         // iterate to-many link operations from plan to createObj
         fujaba__Success = false;
         fujaba__IterPlanToCreateObj = plan.iteratorOfOperations ();

         while ( fujaba__IterPlanToCreateObj.hasNext () )
         {
            try
            {
               _TmpObject =  fujaba__IterPlanToCreateObj.next ();

               // ensure correct type and really bound of object createObj
               JavaSDM.ensure ( _TmpObject instanceof CreateObjectOperation );
               createObj = (CreateObjectOperation) _TmpObject;

               // create link contains from dependencies to createObj
               dependencies.add (createObj);


               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // story pattern Successor of 
      try 
      {
         fujaba__Success = false; 

         // check object dependencies is really bound
         JavaSDM.ensure ( dependencies != null );
         // check object plan is really bound
         JavaSDM.ensure ( plan != null );
         // iterate to-many link operations from plan to deleteLink
         fujaba__Success = false;
         fujaba__IterPlanToDeleteLink = plan.iteratorOfOperations ();

         while ( fujaba__IterPlanToDeleteLink.hasNext () )
         {
            try
            {
               _TmpObject =  fujaba__IterPlanToDeleteLink.next ();

               // ensure correct type and really bound of object deleteLink
               JavaSDM.ensure ( _TmpObject instanceof DestroyLinkOperation );
               deleteLink = (DestroyLinkOperation) _TmpObject;

               // create link contains from dependencies to deleteLink
               dependencies.add (deleteLink);


               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // story pattern Successor of 
      try 
      {
         fujaba__Success = false; 

         // check object dependencies is really bound
         JavaSDM.ensure ( dependencies != null );
         // check object plan is really bound
         JavaSDM.ensure ( plan != null );
         // iterate to-many link operations from plan to assign
         fujaba__Success = false;
         fujaba__IterPlanToAssign = plan.iteratorOfOperations ();

         while ( fujaba__IterPlanToAssign.hasNext () )
         {
            try
            {
               _TmpObject =  fujaba__IterPlanToAssign.next ();

               // ensure correct type and really bound of object assign
               JavaSDM.ensure ( _TmpObject instanceof AttributeAssignmentOperation );
               assign = (AttributeAssignmentOperation) _TmpObject;

               // create link contains from dependencies to assign
               dependencies.add (assign);


               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // // non qualified links first
      // story pattern 
      try 
      {
         fujaba__Success = false; 

         // constraint isQualified( createLink )
         JavaSDM.ensure ( isQualified( createLink ) );
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( !( fujaba__Success ) )
      {
         return ;

      }
      // story pattern successor
      try 
      {
         fujaba__Success = false; 

         // check object dependencies is really bound
         JavaSDM.ensure ( dependencies != null );
         // check object plan is really bound
         JavaSDM.ensure ( plan != null );
         // iterate to-many link operations from plan to otherCreateLink
         fujaba__Success = false;
         fujaba__IterPlanToOtherCreateLink = plan.iteratorOfOperations ();

         while ( fujaba__IterPlanToOtherCreateLink.hasNext () )
         {
            try
            {
               _TmpObject =  fujaba__IterPlanToOtherCreateLink.next ();

               // ensure correct type and really bound of object otherCreateLink
               JavaSDM.ensure ( _TmpObject instanceof CreateLinkOperation );
               otherCreateLink = (CreateLinkOperation) _TmpObject;

               // constraint !isQualified( otherCreateLink)
               JavaSDM.ensure ( !isQualified( otherCreateLink) );
               // create link contains from dependencies to otherCreateLink
               dependencies.add (otherCreateLink);


               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      return ;
   }

   public boolean isQualified (CreateLinkOperation createLink )
   {
      boolean fujaba__Success = false;
      UMLLink link = null;
      UMLLinkRef linkRef = null;
      UMLObject target = null;
      UMLObjectRef targetRef = null;
      FRole role = null;
      FQualifier qualifier = null;
      FRole partner = null;

      // // non qualified links first
      // story pattern 
      try 
      {
         fujaba__Success = false; 

         // check object createLink is really bound
         JavaSDM.ensure ( createLink != null );
         // search to-one link link from createLink to linkRef
         linkRef = createLink.getLink ();

         // check object linkRef is really bound
         JavaSDM.ensure ( linkRef != null );

         // search to-one link ref from linkRef to link
         link = linkRef.getRef ();

         // check object link is really bound
         JavaSDM.ensure ( link != null );



         // search to-one link subject from createLink to targetRef
         targetRef = createLink.getSubject ();

         // check object targetRef is really bound
         JavaSDM.ensure ( targetRef != null );

         // search to-one link ref from targetRef to target
         target = targetRef.getRef ();

         // check object target is really bound
         JavaSDM.ensure ( target != null );



         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // story pattern successor
      try 
      {
         fujaba__Success = false; 

         role = link.getCorrespondingRole (target);

         // check object role is really bound
         JavaSDM.ensure ( role != null );
         // search to-one link partnerRole from role to partner
         partner = role.getPartnerRole ();

         // check object partner is really bound
         JavaSDM.ensure ( partner != null );

         // check isomorphic binding between objects role and partner
         JavaSDM.ensure ( !role.equals (partner) );

         // search to-one link qualifier from partner to qualifier
         qualifier = partner.getQualifier ();

         // check object qualifier is really bound
         JavaSDM.ensure ( qualifier != null );



         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( fujaba__Success )
      {
         return true;

      }
      return false;
   }

}


