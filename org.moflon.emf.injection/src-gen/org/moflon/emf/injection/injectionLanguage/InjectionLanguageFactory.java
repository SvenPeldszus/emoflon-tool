/**
 * generated by Xtext 2.14.0
 */
package org.moflon.emf.injection.injectionLanguage;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see org.moflon.emf.injection.injectionLanguage.InjectionLanguagePackage
 * @generated
 */
public interface InjectionLanguageFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  InjectionLanguageFactory eINSTANCE = org.moflon.emf.injection.injectionLanguage.impl.InjectionLanguageFactoryImpl.init();

  /**
   * Returns a new object of class '<em>Injection File</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Injection File</em>'.
   * @generated
   */
  InjectionFile createInjectionFile();

  /**
   * Returns a new object of class '<em>Regular Import</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Regular Import</em>'.
   * @generated
   */
  RegularImport createRegularImport();

  /**
   * Returns a new object of class '<em>Static Import</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Static Import</em>'.
   * @generated
   */
  StaticImport createStaticImport();

  /**
   * Returns a new object of class '<em>Class Declaration</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Class Declaration</em>'.
   * @generated
   */
  ClassDeclaration createClassDeclaration();

  /**
   * Returns a new object of class '<em>Java Annotation</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Java Annotation</em>'.
   * @generated
   */
  JavaAnnotation createJavaAnnotation();

  /**
   * Returns a new object of class '<em>Class Injection Declaration</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Class Injection Declaration</em>'.
   * @generated
   */
  ClassInjectionDeclaration createClassInjectionDeclaration();

  /**
   * Returns a new object of class '<em>Method Declaration</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Method Declaration</em>'.
   * @generated
   */
  MethodDeclaration createMethodDeclaration();

  /**
   * Returns a new object of class '<em>Parameter Declaration</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Parameter Declaration</em>'.
   * @generated
   */
  ParameterDeclaration createParameterDeclaration();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  InjectionLanguagePackage getInjectionLanguagePackage();

} //InjectionLanguageFactory
