
import org.moflon.maave.tool.symbolicgraphs.SymbolicGraphs.Condition;
import org.moflon.maave.tool.maaveutil.MaaveutilFactory;
import org.moflon.maave.tool.symbolicgraphs.SymbolicGraphMorphisms.SymbolicGraphMorphism;
import org.moflon.maave.tool.symbolicgraphs.SymbolicGraphMorphisms.SymbolicGraphMorphismsFactory;
import org.moflon.maave.tool.symbolicgraphs.secondorder.matching.IMorphismFinder;
import org.moflon.maave.tool.symbolicgraphs.secondorder.matching.MatchingFactory;
import org.moflon.maave.tool.symbolicgraphs.secondorder.matching.MorphismFinderFactory;

partial class GlobalConstraintImpl {



@model isConsistent (SymbolicGraph graphG) <--

      MorphismFinderFactory morFinderFac = MatchingFactory.eINSTANCE.createMorphismFinderFactory();
      Status status = MaaveutilFactory.eINSTANCE.createStatus();
      
      
      SymbolicGraph graphI = this.getConstraint();
      SymbolicGraphMorphism morI_G = SymbolicGraphMorphismsFactory.eINSTANCE.createSymbolicGraphMorphism();
      morI_G.setDom(graphI);
      morI_G.setCodom(graphG);
      status.setValid(true);
      for (Condition cond : graphI.getConditions())
      {
         if (cond.isSat(morI_G, matchMorphismClass) == false)
         {
            status.setValid(false);
            return status;
         }
      }
  
      return status;
-->

}