
import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.resource.Resource;
import SDMLanguage.SDMLanguagePackage;
import SDMLanguage.activities.MoflonEOperation;
import SDMLanguage.activities.StoryNode;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EcorePackage;
import org.eclipse.emf.ecore.resource.ResourceSet;
import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;
import org.eclipse.emf.ecore.xmi.impl.XMIResourceFactoryImpl;


partial class RBACTestImpl {

@members <--

   EPackage pack;
   
-->

@model getTestPattern (String name) <--

      if (pack == null)
      {
         ResourceSet rs = new ResourceSetImpl();
         rs.getResourceFactoryRegistry().getExtensionToFactoryMap().put("xmi", new XMIResourceFactoryImpl());
         rs.getResourceFactoryRegistry().getExtensionToFactoryMap().put("ecore", new XMIResourceFactoryImpl());
         //This is required if not running in plugin
         rs.getURIConverter().getURIMap().put(URI.createPlatformResourceURI("/", true), URI.createFileURI(System.getenv().get("CurrentWSLoc") + "\\"));
         //This is needed for loading using file based metamodel
         //rs.getURIConverter().getURIMap().put(URI.createPlatformPluginURI("/RBACLanguage/", true), URI.createPlatformResourceURI("/DemoclesAttributeConstraintSpecification/", true));

         EcorePackage.eINSTANCE.eResource();
         SDMLanguagePackage.eINSTANCE.eResource();

         //This is for loading using generate metamodel     
         //  DemoclesAttributeConstraintSpecificationPackage.eINSTANCE.getClass();

         //This is for loading using file base metamodel    
         //    URI mmuri =URI.createPlatformPluginURI("DemoclesAttributeConstraintSpecification/model/DemoclesAttributeConstraintSpecification.ecore",true);
         //    Resource mmresource =rs.getResource(mmuri, true);
         //    
         //    rs.getPackageRegistry().put("platform:/plugin/DemoclesAttributeConstraintSpecification/model/DemoclesAttributeConstraintSpecification.ecore",
         //          mmresource.getContents().get(0));

         URI uri1 = URI.createPlatformResourceURI("RBACLanguage/model/RBACLanguage.ecore", true);
         Resource r = rs.getResource(uri1, true);
         // [user code injected with eMoflon]

         pack = (EPackage) r.getContents().get(0);
      }

      EClass clazz = (EClass) pack.getEClassifier("RbacPolicy");
      MoflonEOperation eop = (MoflonEOperation) clazz.getEAllOperations().stream().filter(x -> x.getName().equals(name)).findFirst().get();
      StoryNode stn = (StoryNode) eop.getActivity().getOwnedActivityNode().stream().filter(x -> x instanceof StoryNode).findFirst().get();
      return stn.getStoryPattern();
-->

}