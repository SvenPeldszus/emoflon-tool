group Tgg;

rule(name, refine, constraints, source, correspondence, target, parameters) ::= <<
rule <name><parameters> <if (refine)>refines <refine> <endif>{

	source {<source>
	}
	
	correspondence {<correspondence>
	}
	
	target <if (target)>{
		<target>
	}<endif>
	
	constraints {[
		<constraints>
	]}
	
	operations {
	
	}

}
>>

pattern(pattern) ::= "<pattern>"

box(name, type, operator, semantics, state, links, attributes, constraints) ::= <<

<operator> <semantics> <state> <name> : <type> {<attributes><links><constraints>
}
>>

correspondence(name, type, source, target, operator, semantics, state) ::= "<\n><operator> <semantics> <state> <source> \<- <name> : <type> -\> <target>"

link(target, value, operator, semantics) ::= "<\n><operator> <semantics> -<value>-\> <target>"

attributes(name, object, attribute) ::= "<\n><name>.<object> := <attribute>"

parameters(parameters) ::= <<
<if (parameters)>(<parameters; separator=", ">)<endif>
>>

parameter(name, type) ::= "<name> : <type>"


value(value) ::= "<value>"

dummy(arg) ::= "<arg>"