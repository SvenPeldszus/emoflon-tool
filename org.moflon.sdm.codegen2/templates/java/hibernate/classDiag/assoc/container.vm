#**##if ($class.hasKeyInStereotypes("hibernate") && ( $toMany || $qualified ))
#*   *##set($referenceKind="TO_MANY")
#*   *##set( $container = "F$!{prop}HashSet<$type>" )
#*   *##set( $hibernate_container = "Set<$type>" )
#*   *##set( $collectionType = "Set" )
#*   *##if( $sorted )
#*      *##if( $utility.nullIfEmpty($comparator) )
#*         *##set( $constParams = "new $comparator ()" )
#*      *##end
#*      *##set( $container = "F$!{prop}TreeSet<$type>" )
#*      *##set( $hibernate_container = "Set<$type>" )
#*   *##end
#*   *##if( $qualified )
#*      *##if( $toMany )
#*         *##set($referenceKind="QUALIFIED_TO_MANY")
#*         *##set( $container = "F$!{prop}DuplicatedHashMap<$keyWrapper, $type>" )
#*         *##set( $hibernate_container = "Map<$keyWrapper, $type>" ) 
#*      *##else
#*         *##set($referenceKind="QUALIFIED_TO_ONE")
#*         *##set( $container = "F$!{prop}HashMap<$keyWrapper, $type>" )
#*         *##set( $hibernate_container = "Map<$keyWrapper, $type>" )
#*      *##end
#*      *##set( $collectionType = "Map" )
#*   *##end
#*   *##if( $ordered )              
#*      *##set( $container = "F$!{prop}LinkedList<$type>" )
#*      *##set( $hibernate_container = "List<$type>" )
#*      *##set( $collectionType = "List" )
#*      *##set( $linkedList = " && !this.hasIn$methodSuffix (value)" )
#*   *##end
#*   *##if( $prop )
#*      *##if( $constParams )
#*         *##set( $constParams = "$constParams, this, PROPERTY_$utility.camelToUpperCase($name)" )
#*      *##else
#*         *##set( $constParams = "this, PROPERTY_$utility.camelToUpperCase($name)" )
#*      *##end
#*   *##end
#**##elseif( !$class.hasKeyInStereotypes("hibernate") && ($toMany || $qualified))
#*   *##set($referenceKind="TO_MANY")
#*   *##set( $container = "F$!{prop}HashSet<$type>" )
#*   *##set( $collectionType = "Set" )
#*   *##if( $sorted )
#*      *##if( $utility.nullIfEmpty($comparator) )
#*         *##set( $constParams = "new $comparator ()" )
#*      *##end
#*      *##set( $container = "F$!{prop}TreeSet<$type>" )
#*   *##end
#*   *##if( $qualified )
#*      *##if( $toMany )
#*         *##set($referenceKind="QUALIFIED_TO_MANY")
#*         *##set( $container = "F$!{prop}DuplicatedHashMap<$keyWrapper, $type>" )
#*      *##else
#*         *##set($referenceKind="QUALIFIED_TO_ONE")
#*         *##set( $container = "F$!{prop}HashMap<$keyWrapper, $type>" )
#*      *##end
#*      *##set( $collectionType = "Map" )
#*   *##end
#*   *##if( $ordered )              
#*      *##set( $container = "F$!{prop}LinkedList<$type>" )
#*      *##set( $collectionType = "List" )
#*      *##set( $linkedList = " && !this.hasIn$methodSuffix (value)" )
#*   *##end
#*   *##if( $prop )
#*      *##if( $constParams )
#*         *##set( $constParams = "$constParams, this, PROPERTY_$utility.camelToUpperCase($name)" )
#*      *##else
#*         *##set( $constParams = "this, PROPERTY_$utility.camelToUpperCase($name)" )
#*      *##end
#*   *##end
#**##else
#*   *##set($referenceKind="TO_ONE")
#*   *##set( $container = $type )
#**##end
#**##set( $backlinkSource = "this" )
#**##if ( $referenceKind == "TO_MANY" && $role.Assoc.hasKeyInStereotypes("arraybased" ) )
#*   *##set( $container = "Vector" )
#**##end