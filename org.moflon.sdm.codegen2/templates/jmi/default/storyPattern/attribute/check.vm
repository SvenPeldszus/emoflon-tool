#parse( "jmi/default:storyPattern/attribute/import.vm" )
#set( $attrType = $attr.InstanceOf.Adaptee.Type.Name )

#if( $attrType.equals("Boolean") )
	#if( $attr.getName().startsWith("is"))
		#set( $prefix = "" )
	#else
		#set( $prefix = "is" )
	#end
#else
  #set( $prefix = "get" )
#end

#if ( $static && $final )
	#set( $method = "$attrName" )
	#elseif($reflective)
	#set( $reflectAttrName = $attr.Name)
	#set( $method = "${name}.refGetValue(${reflectAttrName})")
	#else
	#set( $method = "${name}.$prefix$attrName ()" )
#end

// attribute condition
JavaSDM.ensure ( ##
#if($reflective)
	(${method})!= null);
	JavaSDM.ensure ((${method}).equals(${attrExpr})

#else

#if ( $attrOp.equals("== RegExp:") )
	#set( $imports = $engine.getFromInformation("imports") )
	#set( $return = $imports.addToImports("java.util.regex.*") )
($method != null) && Pattern.matches ($attrExpr, $method)##

## if type is 'Any' (= empty string) or Object check with '.equals()' [ml]
#elseif ( ("$!attr.InstanceOf.Adaptee.Type" == "") && ("$attr.InstanceOf.Adaptee" == "Object") )
	${method}.equals($attrExpr)

#elseif ( $attrType.equals("String") )
JavaSDM.stringCompare ($method, $attrExpr) $attrOp 0##

#else	
	#set ($qualifiedEnumName = $mofutility.getQualifiedEnumName($attr.InstanceOf.Type))
	#if($qualifiedEnumName)
		## attr is an enumeration literal
		#set($qualifiedLiteralName = $mofutility.getLiteralFromEnum($attrExpr, $qualifiedEnumName))
$method $attrOp $qualifiedLiteralName##
	#else
		## attr is no enumeration literal
$method $attrOp $attrExpr##
	#end
#end
#end

##end ## end if generic else standard SDM
 );
 
