/*
 * generated by Fujaba - CodeGen2
 */
package de.uni_kassel.fujaba.codegen.rules.engine;
import java.util.Iterator;

import de.uni_kassel.features.ReferenceHandler; // requires Fujaba5/libs/features.jar in classpath
import de.uni_kassel.features.annotation.util.Property; // requires Fujaba5/libs/features.jar in classpath
import de.uni_kassel.fujaba.codegen.rules.Token;
import de.uni_kassel.fujaba.codegen.rules.UMLLinkRef;
import de.uni_kassel.fujaba.codegen.rules.UMLObjectRef;
import de.uni_paderborn.fujaba.metamodel.common.FStereotype;
import de.uni_paderborn.fujaba.metamodel.structure.FRole;
import de.uni_paderborn.fujaba.uml.behavior.UMLLink;
import de.uni_paderborn.fujaba.uml.behavior.UMLMultiLink;
import de.uni_paderborn.fujaba.uml.behavior.UMLObject;
import de.upb.tools.sdm.JavaSDM; // requires Fujaba5/libs/RuntimeTools.jar in classpath
import de.upb.tools.sdm.JavaSDMException;


public class SortedToNCostStrategy extends KeyableToNCostStrategy
{


   public static final String PROPERTY_GE_T_FACTOR = "GET_FACTOR";

   @Property( name = PROPERTY_GE_T_FACTOR, kind = ReferenceHandler.ReferenceKind.ATTRIBUTE )
   public static final double GET_FACTOR = 1;


   public static final String PROPERTY_GE_T_OFFSET = "GET_OFFSET";

   @Property( name = PROPERTY_GE_T_OFFSET, kind = ReferenceHandler.ReferenceKind.ATTRIBUTE )
   public static final double GET_OFFSET = 2;


   public static final String PROPERTY_PU_T_FACTOR = "PUT_FACTOR";

   @Property( name = PROPERTY_PU_T_FACTOR, kind = ReferenceHandler.ReferenceKind.ATTRIBUTE )
   public static final double PUT_FACTOR = 1;


   public static final String PROPERTY_PU_T_OFFSET = "PUT_OFFSET";

   @Property( name = PROPERTY_PU_T_OFFSET, kind = ReferenceHandler.ReferenceKind.ATTRIBUTE )
   public static final double PUT_OFFSET = 3;


   public static final String PROPERTY_REMOV_E_FACTOR = "REMOVE_FACTOR";

   @Property( name = PROPERTY_REMOV_E_FACTOR, kind = ReferenceHandler.ReferenceKind.ATTRIBUTE )
   public static final double REMOVE_FACTOR = 2;


   public static final String PROPERTY_REMOV_E_OFFSET = "REMOVE_OFFSET";

   @Property( name = PROPERTY_REMOV_E_OFFSET, kind = ReferenceHandler.ReferenceKind.ATTRIBUTE )
   public static final double REMOVE_OFFSET = 2;


   public static final String PROPERTY_SEARC_H_FACTOR = "SEARCH_FACTOR";

   @Property( name = PROPERTY_SEARC_H_FACTOR, kind = ReferenceHandler.ReferenceKind.ATTRIBUTE )
   public static final double SEARCH_FACTOR = 2;


   public static final String PROPERTY_SEARC_H_OFFSET = "SEARCH_OFFSET";

   @Property( name = PROPERTY_SEARC_H_OFFSET, kind = ReferenceHandler.ReferenceKind.ATTRIBUTE )
   public static final double SEARCH_OFFSET = 2;


   protected boolean checkQualified (UMLLink link , UMLObject target )
   {
      boolean fujaba__Success = false;
      UMLMultiLink multiLink = null;

      // story pattern successor
      try 
      {
         fujaba__Success = false; 

         // check object link is really bound
         JavaSDM.ensure ( link != null );
         // search to-one link targetLink from link to multiLink
         multiLink = link.getRevTargetLink ();

         // check object multiLink is really bound
         JavaSDM.ensure ( multiLink != null );


         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( !( fujaba__Success ) )
      {
         return true;

      }
      // story pattern Successor of successor
      try 
      {
         fujaba__Success = false; 

         // check object multiLink is really bound
         JavaSDM.ensure ( multiLink != null );
         // attribute condition type == UMLMultiLink.FIRST
         JavaSDM.ensure ( multiLink.getType () == UMLMultiLink.FIRST );

         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( fujaba__Success )
      {
         return false;

      }
      // story pattern Successor of Successor of successor
      try 
      {
         fujaba__Success = false; 

         // check object multiLink is really bound
         JavaSDM.ensure ( multiLink != null );
         // attribute condition type == UMLMultiLink.LAST
         JavaSDM.ensure ( multiLink.getType () == UMLMultiLink.LAST );

         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( !( fujaba__Success ) )
      {
         return true;

      }
      return false;
   }

   public double getCheckCost (double payload )
   {

      return GET_FACTOR*Math.log (payload)+GET_OFFSET+COMPARE_COST;
   }

   public double getCreateCost (UMLLinkRef linkRef , UMLObjectRef from , double payload )
   {

      return PUT_FACTOR*Math.log (payload)+PUT_OFFSET;
   }

   public double getDestroyCost (UMLLinkRef linkRef , UMLObjectRef from , double payload )
   {

      return REMOVE_FACTOR*Math.log (payload)+REMOVE_OFFSET;
   }

   public double getSearchCost (double payload )
   {

      return SEARCH_FACTOR*payload+SEARCH_OFFSET;
   }

   public boolean isResponsibleImpl (Token operation , UMLLink link , UMLObject target , FRole sourceRole , FRole targetRole )
   {
      boolean fujaba__Success = false;
      boolean result = false;

      // story pattern 
      try 
      {
         fujaba__Success = false; 

         // constraint !checkQualified (link, target)
         JavaSDM.ensure ( !checkQualified (link, target) );
         // constraint isSorted (targetRole)
         JavaSDM.ensure ( isSorted (targetRole) );
         // collabStat call
         result = super.isResponsibleImpl( operation, link, target, sourceRole, targetRole );
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( !( fujaba__Success ) )
      {
         return false;

      }
      return result;
   }

   private boolean isSorted (FRole targetRole )
   {
      boolean fujaba__Success = false;
      Iterator fujaba__IterTargetRoleToSorted = null;
      FStereotype sorted = null;

      // story pattern successor
      try 
      {
         fujaba__Success = false; 

         // check object targetRole is really bound
         JavaSDM.ensure ( targetRole != null );
         // iterate to-many link stereotypes from targetRole to sorted
         fujaba__Success = false;
         fujaba__IterTargetRoleToSorted = targetRole.iteratorOfStereotypes ();

         while ( !(fujaba__Success) && fujaba__IterTargetRoleToSorted.hasNext () )
         {
            try
            {
               sorted = (FStereotype) fujaba__IterTargetRoleToSorted.next ();

               // check object sorted is really bound
               JavaSDM.ensure ( sorted != null );
               // attribute condition name == "sorted"
               JavaSDM.ensure ( JavaSDM.stringCompare ((String) sorted.getName (), "sorted") == 0 );


               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( fujaba__Success )
      {
         return true;

      }
      return false;
   }

}


