/*
 * generated by Fujaba - CodeGen2
 */
package de.uni_kassel.fujaba.codegen.classdiag;
import de.uni_kassel.features.ReferenceHandler; // requires Fujaba5/libs/features.jar in classpath
import de.uni_kassel.features.annotation.util.Property; // requires Fujaba5/libs/features.jar in classpath
import de.uni_kassel.fujaba.codegen.engine.CodeWritingEngine;
import de.uni_kassel.fujaba.codegen.engine.Information;
import de.uni_kassel.fujaba.codegen.rules.Token;
import de.upb.tools.sdm.JavaSDM; // requires Fujaba5/libs/RuntimeTools.jar in classpath
import de.upb.tools.sdm.JavaSDMException;


public class InformationResetter extends ASGElementCodeWriter
{


   public String generateCode (Token operation )
   {
      boolean fujaba__Success = false;
      Information info = null;
      CodeWritingEngine engine = null;

      // story pattern 
      try 
      {
         fujaba__Success = false; 

         // constraint isResponsibleFor (operation)
         JavaSDM.ensure ( isResponsibleFor (operation) );
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( fujaba__Success )
      {
         // story pattern 
         try 
         {
            fujaba__Success = false; 

            // search to-one link generators from this to engine
            engine = this.getEngine ();

            // check object engine is really bound
            JavaSDM.ensure ( engine != null );

            // search to-one link additionalInfo from engine to info
            info = engine.getFromInformation (informationType);

            // check object info is really bound
            JavaSDM.ensure ( info != null );



            // collabStat call
            info.reset();
            fujaba__Success = true;
         }
         catch ( JavaSDMException fujaba__InternalException )
         {
            fujaba__Success = false;
         }


      }
      return null;
   }

   public static final String PROPERTY_INFORMATION_TYPE = "informationType";

   @Property( name = PROPERTY_INFORMATION_TYPE, kind = ReferenceHandler.ReferenceKind.ATTRIBUTE )
   private String informationType;

   @Property( name = PROPERTY_INFORMATION_TYPE )
   public void setInformationType (String value)
   {
      this.informationType = value;
   }

   public InformationResetter withInformationType (String value)
   {
      setInformationType (value);
      return this;
   }

   @Property( name = PROPERTY_INFORMATION_TYPE )
   public String getInformationType ()
   {
      return this.informationType;
   }

}


