/*
 * generated by Fujaba - CodeGen2
 */
package de.uni_kassel.fujaba.codegen.engine;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Iterator;

import de.uni_kassel.features.ReferenceHandler; // requires Fujaba5/libs/features.jar in classpath
import de.uni_kassel.features.annotation.util.Property; // requires Fujaba5/libs/features.jar in classpath
import de.uni_kassel.fujaba.codegen.classdiag.ASGElementCodeWriter;
import de.uni_kassel.fujaba.codegen.engine.listener.CodeWritingListener;
import de.uni_kassel.fujaba.codegen.engine.listener.CodeWritingVetoException;
import de.uni_kassel.fujaba.codegen.rules.Token;
import de.upb.tools.sdm.JavaSDM; // requires Fujaba5/libs/RuntimeTools.jar in classpath
import de.upb.tools.sdm.JavaSDMException;


public abstract class CodeToFileWriter extends ASGElementCodeWriter
{


   public File createFile (String path , String name )
   {
      boolean fujaba__Success = false;
      File dir = null;
      File file = null;

      // children
      // story pattern storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         dir = new File (path).getCanonicalFile();

         // check object dir is really bound
         JavaSDM.ensure ( dir != null );
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }


      // exception
      catch( IOException e )
      {
         getEngine().error("Directory " + path + " not accessible.", null);
         return null;

      }

      if ( !dir.exists() )
      {
         // story pattern Successor of storypatternwiththis
         try 
         {
            fujaba__Success = false; 

            // check object dir is really bound
            JavaSDM.ensure ( dir != null );
            // collabStat call
            dir.mkdirs();
            fujaba__Success = true;
         }
         catch ( JavaSDMException fujaba__InternalException )
         {
            fujaba__Success = false;
         }


      }
      // story pattern successor
      try 
      {
         fujaba__Success = false; 

         file = new File (path, name);

         // check object file is really bound
         JavaSDM.ensure ( file != null );
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( file.exists() )
      {
         // story pattern Successor of successor
         try 
         {
            fujaba__Success = false; 

            // check object file is really bound
            JavaSDM.ensure ( file != null );
            fujaba__Success = true;
         }
         catch ( JavaSDMException fujaba__InternalException )
         {
            fujaba__Success = false;
         }


      }
      return file;
   }

   public static final String PROPERTY_CREATE_FILES = "createFiles";

   @Property( name = PROPERTY_CREATE_FILES, kind = ReferenceHandler.ReferenceKind.ATTRIBUTE )
   private boolean createFiles = true;

   @Property( name = PROPERTY_CREATE_FILES )
   public void setCreateFiles (boolean value)
   {
      this.createFiles = value;
   }

   public CodeToFileWriter withCreateFiles (boolean value)
   {
      setCreateFiles (value);
      return this;
   }

   @Property( name = PROPERTY_CREATE_FILES )
   public boolean isCreateFiles ()
   {
      return this.createFiles;
   }

   public static final String PROPERTY_EXTENDER = "extender";

   @Property( name = PROPERTY_EXTENDER, kind = ReferenceHandler.ReferenceKind.ATTRIBUTE )
   private String extender;

   @Property( name = PROPERTY_EXTENDER )
   public void setExtender (String value)
   {
      this.extender = value;
   }

   public CodeToFileWriter withExtender (String value)
   {
      setExtender (value);
      return this;
   }

   @Property( name = PROPERTY_EXTENDER )
   public String getExtender ()
   {
      return this.extender;
   }

   public String generateCode (Token operation )
   {
      boolean fujaba__Success = false;
      CodeWritingEngine engine = null;
      String code = null;

      // story pattern 
      try 
      {
         fujaba__Success = false; 

         // attribute condition createFiles == true
         JavaSDM.ensure ( this.isCreateFiles () == true );

         // constraint isResponsibleFor (operation)
         JavaSDM.ensure ( isResponsibleFor (operation) );
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( !( fujaba__Success ) )
      {
         return null;

      }
      // story pattern 
      try 
      {
         fujaba__Success = false; 

         // search to-one link generators from this to engine
         engine = this.getEngine ();

         // check object engine is really bound
         JavaSDM.ensure ( engine != null );


         // collabStat call
         code = engine.generateCode (operation, this);
         // collabStat call
         this.writeCodeToFile (operation, code);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      return code;
   }

   public abstract String getFileName (Token token );

   public abstract String getFilePath (Token token );

   public void writeCodeToFile (Token token , String code )
   {
      boolean fujaba__Success = false;
      String path = null;
      String name = null;
      File file = null;
      Iterator fujaba__IterCwEngineToListener = null;
      CodeWritingListener listener = null;
      CodeWritingEngine cwEngine = null;
      FileWriter writer = null;

      // story pattern 
      try 
      {
         fujaba__Success = false; 

         // collabStat call
         path = this.getFilePath (token);
         // collabStat call
         name = this.getFileName (token);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( !( (code != null) && (path != null) && (name != null) ) )
      {
         return ;

      }
      // story pattern successor
      try 
      {
         fujaba__Success = false; 

         file = createFile (path, name + getExtender());

         // check object file is really bound
         JavaSDM.ensure ( file != null );
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      try {
      // story pattern 
      try 
      {
         fujaba__Success = false; 

         // search to-one link generators from this to cwEngine
         cwEngine = this.getEngine ();

         // check object cwEngine is really bound
         JavaSDM.ensure ( cwEngine != null );

         // iterate to-many link listener from cwEngine to listener
         fujaba__Success = false;
         fujaba__IterCwEngineToListener = cwEngine.iteratorOfListener ();

         while ( fujaba__IterCwEngineToListener.hasNext () )
         {
            try
            {
               listener = (CodeWritingListener) fujaba__IterCwEngineToListener.next ();

               // check object listener is really bound
               JavaSDM.ensure ( listener != null );
               // collabStat call
               listener.preWriteCodeToFile (file, token, this, code);

               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);

         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      }
      catch (CodeWritingVetoException e)
      {
         code = e.getCode();
         if (code == null) return;
      }
      // children
      // story pattern successor
      try 
      {
         fujaba__Success = false; 

         writer = new FileWriter (file);

         // check object writer is really bound
         JavaSDM.ensure ( writer != null );
         // collabStat call
         writer.write (code, 0, code.length());;
         // collabStat call
         writer.flush();
         // collabStat call
         writer.close();
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }


      // exception
      catch( IOException e )
      {
         e.printStackTrace();
         return ;

      }

      // story pattern 
      try 
      {
         fujaba__Success = false; 

         // check object cwEngine is really bound
         JavaSDM.ensure ( cwEngine != null );
         // iterate to-many link listener from cwEngine to listener
         fujaba__Success = false;
         fujaba__IterCwEngineToListener = cwEngine.iteratorOfListener ();

         while ( fujaba__IterCwEngineToListener.hasNext () )
         {
            try
            {
               listener = (CodeWritingListener) fujaba__IterCwEngineToListener.next ();

               // check object listener is really bound
               JavaSDM.ensure ( listener != null );
               // collabStat call
               listener.postWriteCodeToFile (file, token, this, code);

               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      return ;
   }

}


