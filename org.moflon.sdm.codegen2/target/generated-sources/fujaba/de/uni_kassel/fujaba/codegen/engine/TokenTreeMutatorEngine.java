/*
 * generated by Fujaba - CodeGen2
 */
package de.uni_kassel.fujaba.codegen.engine;
import de.uni_kassel.features.ReferenceHandler; // requires Fujaba5/libs/features.jar in classpath
import de.uni_kassel.features.annotation.util.Property; // requires Fujaba5/libs/features.jar in classpath
import de.uni_kassel.fujaba.codegen.engine.message.MessageHandler;
import de.uni_kassel.fujaba.codegen.engine.message.MessageHandlerDelegate;
import de.uni_kassel.fujaba.codegen.rules.Token;


public abstract class TokenTreeMutatorEngine extends MessageHandlerDelegate
{


   /**
    * <pre>
    *           0..n     treeMutators     0..1
    * TokenTreeMutatorEngine ------------------------- TokenMutatorTemplateEngine
    *           treeMutators               engine
    * </pre>
    */
   public static final String PROPERTY_ENGINE = "engine";

   @Property( name = PROPERTY_ENGINE, partner = TokenMutatorTemplateEngine.PROPERTY_TREE_MUTATORS, kind = ReferenceHandler.ReferenceKind.TO_ONE,
         adornment = ReferenceHandler.Adornment.NONE)
   private TokenMutatorTemplateEngine engine;

   @Property( name = PROPERTY_ENGINE )
   public boolean setEngine (TokenMutatorTemplateEngine value)
   {
      boolean changed = false;

      if (this.engine != value)
      {
      
         TokenMutatorTemplateEngine oldValue = this.engine;
         TokenTreeMutatorEngine source = this;
         if (this.engine != null)
         {
            this.engine = null;
            oldValue.removeFromTreeMutators (this);
         }
         this.engine = value;

         if (value != null)
         {
            value.addToTreeMutators (this);
         }
         changed = true;
      
      }
      return changed;
   }

   @Property( name = PROPERTY_ENGINE )
   public TokenTreeMutatorEngine withEngine (TokenMutatorTemplateEngine value)
   {
      setEngine (value);
      return this;
   }

   public TokenMutatorTemplateEngine getEngine ()
   {
      return this.engine;
   }

   public MessageHandler getHandler ()
   {

      return getEngine();
   }

   public abstract boolean mutateTree (Token token );

   public void removeYou()
   {
      this.setEngine (null);
      super.removeYou ();
   }
}


