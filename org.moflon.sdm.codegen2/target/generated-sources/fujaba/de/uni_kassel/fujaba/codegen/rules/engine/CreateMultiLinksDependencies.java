/*
 * generated by Fujaba - CodeGen2
 */
package de.uni_kassel.fujaba.codegen.rules.engine;
import java.util.Iterator;
import java.util.Set;

import de.uni_kassel.fujaba.codegen.rules.CreateLinkOperation;
import de.uni_kassel.fujaba.codegen.rules.ExecuteStoryPatternOperation;
import de.uni_kassel.fujaba.codegen.rules.ObjectSet;
import de.uni_kassel.fujaba.codegen.rules.Token;
import de.uni_kassel.fujaba.codegen.rules.UMLLinkRef;
import de.uni_paderborn.fujaba.uml.behavior.UMLLink;
import de.uni_paderborn.fujaba.uml.behavior.UMLMultiLink;
import de.upb.tools.sdm.JavaSDM; // requires Fujaba5/libs/RuntimeTools.jar in classpath
import de.upb.tools.sdm.JavaSDMException;


public class CreateMultiLinksDependencies extends OperationDependencies
{


   public void addDependency (UMLLink link , ObjectSet set , Set dependencies )
   {
      boolean fujaba__Success = false;
      Iterator fujaba__IterOtherRefToOtherOp = null;
      Object _TmpObject = null;
      CreateLinkOperation otherOp = null;
      UMLLinkRef otherRef = null;

      // story pattern successor
      try 
      {
         fujaba__Success = false; 

         // check object dependencies is really bound
         JavaSDM.ensure ( dependencies != null );
         // check object link is really bound
         JavaSDM.ensure ( link != null );
         // check object set is really bound
         JavaSDM.ensure ( set != null );
         // search to-one link links from set to otherRef
         otherRef = set.getFromLinks (link);

         // check object otherRef is really bound
         JavaSDM.ensure ( otherRef != null );

         // iterate to-many link link from otherRef to otherOp
         fujaba__Success = false;
         fujaba__IterOtherRefToOtherOp = otherRef.iteratorOfLinkTo ();

         while ( !(fujaba__Success) && fujaba__IterOtherRefToOtherOp.hasNext () )
         {
            try
            {
               _TmpObject =  fujaba__IterOtherRefToOtherOp.next ();

               // ensure correct type and really bound of object otherOp
               JavaSDM.ensure ( _TmpObject instanceof CreateLinkOperation );
               otherOp = (CreateLinkOperation) _TmpObject;


               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);

         // attribute condition modifier == UMLLink.CREATE
         JavaSDM.ensure ( link.getModifier () == UMLLink.CREATE );

         // create link contains from dependencies to otherOp
         dependencies.add (otherOp);

         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      return ;
   }

   public void getDependencies (ExecuteStoryPatternOperation plan , Token operation , Set dependencies )
   {
      boolean fujaba__Success = false;
      Object _TmpObject = null;
      CreateLinkOperation createLink = null;
      ObjectSet set = null;
      UMLLink link = null;
      UMLLinkRef linkRef = null;
      UMLLink other = null;
      UMLMultiLink noMulti = null;
      UMLLink current = null;
      UMLMultiLink multi = null;

      // story pattern successor
      try 
      {
         fujaba__Success = false; 

         _TmpObject = operation;

         // ensure correct type and really bound of object createLink
         JavaSDM.ensure ( _TmpObject instanceof CreateLinkOperation );
         createLink = (CreateLinkOperation) _TmpObject;

         // search to-one link link from createLink to linkRef
         linkRef = createLink.getLink ();

         // check object linkRef is really bound
         JavaSDM.ensure ( linkRef != null );

         // search to-one link links from linkRef to set
         set = linkRef.getList ();

         // check object set is really bound
         JavaSDM.ensure ( set != null );


         // search to-one link ref from linkRef to link
         link = linkRef.getRef ();

         // check object link is really bound
         JavaSDM.ensure ( link != null );



         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( !( fujaba__Success ) )
      {
         return ;

      }
      // story pattern successor
      try 
      {
         fujaba__Success = false; 

         other = link;

         // check object other is really bound
         JavaSDM.ensure ( other != null );
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      while( true )
      {
         // story pattern successor
         try 
         {
            fujaba__Success = false; 

            // check object other is really bound
            JavaSDM.ensure ( other != null );
            // attribute condition modifier == UMLLink.CREATE
            JavaSDM.ensure ( other.getModifier () == UMLLink.CREATE );

            // check negative bindings
            try
            {
               fujaba__Success = false;

               // search to-one link targetLink from other to noMulti
               noMulti = other.getRevTargetLink ();

               // check object noMulti is really bound
               JavaSDM.ensure ( noMulti != null );

               // attribute condition type == UMLMultiLink.FIRST
               JavaSDM.ensure ( noMulti.getType () == UMLMultiLink.FIRST );



               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }

            fujaba__Success = !(fujaba__Success);

            JavaSDM.ensure ( fujaba__Success );

            fujaba__Success = true;
         }
         catch ( JavaSDMException fujaba__InternalException )
         {
            fujaba__Success = false;
         }



      	// loop termination check 
      	if ( !( fujaba__Success ) )
      	{
      		break;
      	}
	
         // story pattern successor
         try 
         {
            fujaba__Success = false; 

            current = other;

            // check object current is really bound
            JavaSDM.ensure ( current != null );
            fujaba__Success = true;
         }
         catch ( JavaSDMException fujaba__InternalException )
         {
            fujaba__Success = false;
         }

         // story pattern Successor of successor
         try 
         {
            fujaba__Success = false; 

            // check object current is really bound
            JavaSDM.ensure ( current != null );
            // search to-one link targetLink from current to multi
            multi = current.getRevTargetLink ();

            // check object multi is really bound
            JavaSDM.ensure ( multi != null );

            // search to-one link sourceLink from multi to other
            other = multi.getSourceLink ();

            // check object other is really bound
            JavaSDM.ensure ( other != null );

            // check isomorphic binding between objects other and current
            JavaSDM.ensure ( !other.equals (current) );



            fujaba__Success = true;
         }
         catch ( JavaSDMException fujaba__InternalException )
         {
            fujaba__Success = false;
         }

         if ( !( fujaba__Success ) )
         {
            // story pattern successor
            try 
            {
               fujaba__Success = false; 

               other = link;

               // check object other is really bound
               JavaSDM.ensure ( other != null );
               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }

            while( true )
            {
               // story pattern successor
               try 
               {
                  fujaba__Success = false; 

                  // check object other is really bound
                  JavaSDM.ensure ( other != null );
                  // attribute condition modifier == UMLLink.CREATE
                  JavaSDM.ensure ( other.getModifier () == UMLLink.CREATE );

                  // check negative bindings
                  try
                  {
                     fujaba__Success = false;

                     // search to-one link sourceLink from other to noMulti
                     noMulti = other.getRevSourceLink ();

                     // check object noMulti is really bound
                     JavaSDM.ensure ( noMulti != null );

                     // attribute condition type == UMLMultiLink.LAST
                     JavaSDM.ensure ( noMulti.getType () == UMLMultiLink.LAST );



                     fujaba__Success = true;
                  }
                  catch ( JavaSDMException fujaba__InternalException )
                  {
                     fujaba__Success = false;
                  }

                  fujaba__Success = !(fujaba__Success);

                  JavaSDM.ensure ( fujaba__Success );

                  fujaba__Success = true;
               }
               catch ( JavaSDMException fujaba__InternalException )
               {
                  fujaba__Success = false;
               }



            	// loop termination check 
            	if ( !( fujaba__Success ) )
            	{
            		break;
            	}
	
               // story pattern successor
               try 
               {
                  fujaba__Success = false; 

                  current = other;

                  // check object current is really bound
                  JavaSDM.ensure ( current != null );
                  fujaba__Success = true;
               }
               catch ( JavaSDMException fujaba__InternalException )
               {
                  fujaba__Success = false;
               }

               // story pattern Successor of successor
               try 
               {
                  fujaba__Success = false; 

                  // check object current is really bound
                  JavaSDM.ensure ( current != null );
                  // search to-one link sourceLink from current to multi
                  multi = current.getRevSourceLink ();

                  // check object multi is really bound
                  JavaSDM.ensure ( multi != null );

                  // search to-one link targetLink from multi to other
                  other = multi.getTargetLink ();

                  // check object other is really bound
                  JavaSDM.ensure ( other != null );

                  // check isomorphic binding between objects other and current
                  JavaSDM.ensure ( !other.equals (current) );



                  fujaba__Success = true;
               }
               catch ( JavaSDMException fujaba__InternalException )
               {
                  fujaba__Success = false;
               }

               if ( !( fujaba__Success ) )
               {
                  // story pattern successor
                  try 
                  {
                     fujaba__Success = false; 

                     // check object createLink is really bound
                     JavaSDM.ensure ( createLink != null );
                     // check object link is really bound
                     JavaSDM.ensure ( link != null );
                     // search to-one link targetLink from link to multi
                     multi = link.getRevTargetLink ();

                     // check object multi is really bound
                     JavaSDM.ensure ( multi != null );

                     // search to-one link sourceLink from multi to other
                     other = multi.getSourceLink ();

                     // check object other is really bound
                     JavaSDM.ensure ( other != null );

                     // check isomorphic binding between objects other and link
                     JavaSDM.ensure ( !other.equals (link) );



                     // create link multiLink from createLink to multi
                     createLink.setMultiLink (multi);

                     // collabStat call
                     this.addDependency (other, set, dependencies);
                     fujaba__Success = true;
                  }
                  catch ( JavaSDMException fujaba__InternalException )
                  {
                     fujaba__Success = false;
                  }

                  return ;

               }

            }
            // story pattern successor
            try 
            {
               fujaba__Success = false; 

               // check object createLink is really bound
               JavaSDM.ensure ( createLink != null );
               // check object link is really bound
               JavaSDM.ensure ( link != null );
               // search to-one link sourceLink from link to multi
               multi = link.getRevSourceLink ();

               // check object multi is really bound
               JavaSDM.ensure ( multi != null );

               // search to-one link targetLink from multi to other
               other = multi.getTargetLink ();

               // check object other is really bound
               JavaSDM.ensure ( other != null );

               // check isomorphic binding between objects other and link
               JavaSDM.ensure ( !other.equals (link) );



               // create link multiLink from createLink to multi
               createLink.setMultiLink (multi);

               // collabStat call
               this.addDependency (other, set, dependencies);
               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }

            return ;

         }

      }
      // story pattern successor
      try 
      {
         fujaba__Success = false; 

         // check object createLink is really bound
         JavaSDM.ensure ( createLink != null );
         // check object link is really bound
         JavaSDM.ensure ( link != null );
         // search to-one link targetLink from link to multi
         multi = link.getRevTargetLink ();

         // check object multi is really bound
         JavaSDM.ensure ( multi != null );

         // search to-one link sourceLink from multi to other
         other = multi.getSourceLink ();

         // check object other is really bound
         JavaSDM.ensure ( other != null );

         // check isomorphic binding between objects other and link
         JavaSDM.ensure ( !other.equals (link) );



         // create link multiLink from createLink to multi
         createLink.setMultiLink (multi);

         // collabStat call
         this.addDependency (other, set, dependencies);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      return ;
   }

}


