/*
 * generated by Fujaba - CodeGen2
 */
package de.uni_kassel.fujaba.codegen.classdiag.engine;
import java.util.Iterator;

import de.uni_kassel.fujaba.codegen.classdiag.ASGElementContextToken;
import de.uni_kassel.fujaba.codegen.classdiag.ASGElementToken;
import de.uni_kassel.fujaba.codegen.engine.TokenCreationEngine;
import de.uni_kassel.fujaba.codegen.rules.Token;
import de.uni_paderborn.fujaba.metamodel.common.FElement;
import de.uni_paderborn.fujaba.metamodel.common.FStereotype;
import de.uni_paderborn.fujaba.metamodel.structure.FAssoc;
import de.uni_paderborn.fujaba.metamodel.structure.FAttr;
import de.uni_paderborn.fujaba.metamodel.structure.FClass;
import de.uni_paderborn.fujaba.metamodel.structure.FMethod;
import de.uni_paderborn.fujaba.metamodel.structure.FRole;
import de.uni_paderborn.fujaba.uml.behavior.UMLStatechart;
import de.upb.tools.sdm.JavaSDM; // requires Fujaba5/libs/RuntimeTools.jar in classpath
import de.upb.tools.sdm.JavaSDMException;


public class ClassEngine extends TokenCreationEngine
{


   public void addAttrToken (FClass clazz , ASGElementToken token )
   {
      boolean fujaba__Success = false;
      boolean definedHere = false;
      ASGElementToken attrToken = null;
      Iterator fujaba__IterClazzToAttr = null;
      FAttr attr = null;

      // story pattern 
      try 
      {
         fujaba__Success = false; 

         // check object clazz is really bound
         JavaSDM.ensure ( clazz != null );
         // check object token is really bound
         JavaSDM.ensure ( token != null );
         // check link element from token to clazz
         JavaSDM.ensure (clazz.equals (token.getElement ()));

         // collabStat call
         definedHere = true;
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // story pattern Successor of storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         // check object clazz is really bound
         JavaSDM.ensure ( clazz != null );
         // check object token is really bound
         JavaSDM.ensure ( token != null );
         // iterate to-many link attrs from clazz to attr
         fujaba__Success = false;
         fujaba__IterClazzToAttr = clazz.iteratorOfAttrs ();

         while ( fujaba__IterClazzToAttr.hasNext () )
         {
            try
            {
               attr = (FAttr) fujaba__IterClazzToAttr.next ();

               // check object attr is really bound
               JavaSDM.ensure ( attr != null );
               // constraint definedHere || !attr.isStatic()
               JavaSDM.ensure ( definedHere || !attr.isStatic() );
               // create object attrToken
               attrToken = new ASGElementToken ( );

               // create link children from attrToken to token
               attrToken.setParent (token);

               // create link element from attrToken to attr
               attrToken.setElement (attr);


               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      return ;
   }

   public void addRoleToken (FClass clazz , ASGElementToken token )
   {
      boolean fujaba__Success = false;
      Iterator fujaba__IterAssocToStereo = null;
      FStereotype stereo = null;
      FClass ownerClass = null;
      Iterator fujaba__IterTokenToOtherToken = null;
      Object _TmpObject = null;
      ASGElementToken otherToken = null;
      FRole otherRole = null;
      FAssoc assoc = null;
      Iterator fujaba__IterClazzToRole = null;
      FRole role = null;

      // story pattern Successor of Successor of Successor of storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         // check object clazz is really bound
         JavaSDM.ensure ( clazz != null );
         // iterate to-many link target from clazz to role
         fujaba__Success = false;
         fujaba__IterClazzToRole = clazz.iteratorOfRoles ();

         while ( fujaba__IterClazzToRole.hasNext () )
         {
            try
            {
               role = (FRole) fujaba__IterClazzToRole.next ();

               // check object role is really bound
               JavaSDM.ensure ( role != null );
               // search to-one link assoc from role to assoc
               assoc = role.getAssoc ();

               // check object assoc is really bound
               JavaSDM.ensure ( assoc != null );

               // check negative bindings
               try
               {
                  fujaba__Success = false;

                  // iterate to-many link stereotypes from assoc to stereo
                  fujaba__Success = false;
                  fujaba__IterAssocToStereo = assoc.iteratorOfStereotypes ();

                  while ( !(fujaba__Success) && fujaba__IterAssocToStereo.hasNext () )
                  {
                     try
                     {
                        stereo = (FStereotype) fujaba__IterAssocToStereo.next ();

                        // check object stereo is really bound
                        JavaSDM.ensure ( stereo != null );
                        // attribute condition name == FStereotype.VIRTUAL_PATH
                        JavaSDM.ensure ( JavaSDM.stringCompare ((String) stereo.getName (), FStereotype.VIRTUAL_PATH) == 0 );


                        fujaba__Success = true;
                     }
                     catch ( JavaSDMException fujaba__InternalException )
                     {
                        fujaba__Success = false;
                     }
                  }
                  JavaSDM.ensure (fujaba__Success);

                  fujaba__Success = true;
               }
               catch ( JavaSDMException fujaba__InternalException )
               {
                  fujaba__Success = false;
               }

               fujaba__Success = !(fujaba__Success);

               JavaSDM.ensure ( fujaba__Success );

               // search to-one link partnerRole from role to otherRole
               otherRole = role.getPartnerRole ();

               // check object otherRole is really bound
               JavaSDM.ensure ( otherRole != null );

               // check isomorphic binding between objects role and otherRole
               JavaSDM.ensure ( !role.equals (otherRole) );

               // attribute condition adornment != FRole.REFERENCE
               JavaSDM.ensure ( role.getAdornment () != FRole.REFERENCE );

               // story pattern storypatternwiththis
               try 
               {
                  fujaba__Success = false; 

                  // check object otherRole is really bound
                  JavaSDM.ensure ( otherRole != null );
                  // check object role is really bound
                  JavaSDM.ensure ( role != null );
                  // check object token is really bound
                  JavaSDM.ensure ( token != null );
                  // check isomorphic binding between objects role and otherRole
                  JavaSDM.ensure ( !role.equals (otherRole) );

                  // search to-one link target from role to ownerClass
                  ownerClass = role.getTarget ();

                  // check object ownerClass is really bound
                  JavaSDM.ensure ( ownerClass != null );

                  // check link target from otherRole to ownerClass
                  JavaSDM.ensure (ownerClass.equals (otherRole.getTarget ()));


                  // iterate to-many link children from token to otherToken
                  fujaba__Success = false;
                  fujaba__IterTokenToOtherToken = token.iteratorOfChildren ();

                  while ( !(fujaba__Success) && fujaba__IterTokenToOtherToken.hasNext () )
                  {
                     try
                     {
                        _TmpObject =  fujaba__IterTokenToOtherToken.next ();

                        // ensure correct type and really bound of object otherToken
                        JavaSDM.ensure ( _TmpObject instanceof ASGElementToken );
                        otherToken = (ASGElementToken) _TmpObject;

                        // check isomorphic binding between objects token and otherToken
                        JavaSDM.ensure ( !token.equals (otherToken) );

                        // check link element from otherToken to role
                        JavaSDM.ensure (role.equals (otherToken.getElement ()));


                        fujaba__Success = true;
                     }
                     catch ( JavaSDMException fujaba__InternalException )
                     {
                        fujaba__Success = false;
                     }
                  }
                  JavaSDM.ensure (fujaba__Success);
                  // attribute condition name == role.getName()
                  JavaSDM.ensure ( JavaSDM.stringCompare ((String) otherRole.getName (), role.getName()) == 0 );

                  fujaba__Success = true;
               }
               catch ( JavaSDMException fujaba__InternalException )
               {
                  fujaba__Success = false;
               }

               if ( !( fujaba__Success ) )
               {
                  // story pattern 
                  try 
                  {
                     fujaba__Success = false; 

                     // collabStat call
                     this.createRoleToken( clazz, token, otherRole );
                     fujaba__Success = true;
                  }
                  catch ( JavaSDMException fujaba__InternalException )
                  {
                     fujaba__Success = false;
                  }


               }



               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      return ;
   }

   public void createRoleToken (FClass clazz , ASGElementToken token , FRole otherRole )
   {
      boolean fujaba__Success = false;
      ASGElementToken roleToken = null;
      ASGElementContextToken removeYouToken = null;

      // story pattern Successor of Successor of Successor of Successor of storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         // check object otherRole is really bound
         JavaSDM.ensure ( otherRole != null );
         // check object token is really bound
         JavaSDM.ensure ( token != null );
         // create object roleToken
         roleToken = new ASGElementToken ( );

         // create object removeYouToken
         removeYouToken = new ASGElementContextToken ( );

         // assign attribute removeYouToken
         removeYouToken.setContext ("removeYou");
         // create link children from roleToken to token
         roleToken.setParent (token);

         // create link children from removeYouToken to token
         removeYouToken.setParent (token);

         // create link element from roleToken to otherRole
         roleToken.setElement (otherRole);

         // create link element from removeYouToken to otherRole
         removeYouToken.setElement (otherRole);

         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      return ;
   }

   public Token createToken (FElement element )
   {
      boolean fujaba__Success = false;
      Object _TmpObject = null;
      FClass clazz = null;
      ASGElementToken token = null;
      Iterator fujaba__IterClazzToMethod = null;
      FMethod method = null;
      Iterator fujaba__IterClazzToIStereo = null;
      FStereotype iStereo = null;
      Iterator fujaba__IterSuperClassToNoStereo = null;
      FStereotype noStereo = null;
      Iterator fujaba__IterSuperClassToSuperInterface = null;
      Iterator fujaba__IterClazzToSuperClass = null;
      FClass superClass = null;
      Iterator fujaba__IterSuperInterfaceToIStereo = null;
      Iterator fujaba__IterClazzToSuperInterface = null;
      FClass superInterface = null;
      UMLStatechart statechart = null;

      // story pattern storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         _TmpObject = element;

         // ensure correct type and really bound of object clazz
         JavaSDM.ensure ( _TmpObject instanceof FClass );
         clazz = (FClass) _TmpObject;

         // create object token
         token = new ASGElementToken ( );

         // create link element from token to clazz
         token.setElement (clazz);

         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // story pattern 
      try 
      {
         fujaba__Success = false; 

         // collabStat call
         this.addAttrToken( clazz, token );
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // story pattern Successor of Successor of storypatternwiththis
      try 
      {
         fujaba__Success = false; 

         // check object clazz is really bound
         JavaSDM.ensure ( clazz != null );
         // iterate to-many link methods from clazz to method
         fujaba__Success = false;
         fujaba__IterClazzToMethod = clazz.iteratorOfMethods ();

         while ( fujaba__IterClazzToMethod.hasNext () )
         {
            try
            {
               method = (FMethod) fujaba__IterClazzToMethod.next ();

               // check object method is really bound
               JavaSDM.ensure ( method != null );
               // collabStat call
               this.createToken (method, token);

               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // story pattern 
      try 
      {
         fujaba__Success = false; 

         // collabStat call
         this.addRoleToken( clazz, token );
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      // story pattern 
      try 
      {
         fujaba__Success = false; 

         // check object clazz is really bound
         JavaSDM.ensure ( clazz != null );
         // iterate to-many link stereotypes from clazz to iStereo
         fujaba__Success = false;
         fujaba__IterClazzToIStereo = clazz.iteratorOfStereotypes ();

         while ( !(fujaba__Success) && fujaba__IterClazzToIStereo.hasNext () )
         {
            try
            {
               iStereo = (FStereotype) fujaba__IterClazzToIStereo.next ();

               // check object iStereo is really bound
               JavaSDM.ensure ( iStereo != null );
               // attribute condition name == FStereotype.INTERFACE
               JavaSDM.ensure ( JavaSDM.stringCompare ((String) iStereo.getName (), FStereotype.INTERFACE) == 0 );


               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( !( fujaba__Success ) )
      {
         // story pattern 
         try 
         {
            fujaba__Success = false; 

            // check object clazz is really bound
            JavaSDM.ensure ( clazz != null );
            // iterate to-many link $link.InstanceOf.Name from clazz to superInterface
            fujaba__Success = false;
            fujaba__IterClazzToSuperInterface = new de.uni_kassel.sdm.Path (clazz, "(revSubclass.superclass)*");
            while ( fujaba__IterClazzToSuperInterface.hasNext () )
            {
               try
               {
                  _TmpObject =  fujaba__IterClazzToSuperInterface.next ();

                  // ensure correct type and really bound of object superInterface
                  JavaSDM.ensure ( _TmpObject instanceof FClass );
                  superInterface = (FClass) _TmpObject;

                  // check isomorphic binding between objects superInterface and clazz
                  JavaSDM.ensure ( !superInterface.equals (clazz) );

                  // iterate to-many link stereotypes from superInterface to iStereo
                  fujaba__Success = false;
                  fujaba__IterSuperInterfaceToIStereo = superInterface.iteratorOfStereotypes ();

                  while ( fujaba__IterSuperInterfaceToIStereo.hasNext () )
                  {
                     try
                     {
                        iStereo = (FStereotype) fujaba__IterSuperInterfaceToIStereo.next ();

                        // check object iStereo is really bound
                        JavaSDM.ensure ( iStereo != null );
                        // attribute condition name == FStereotype.INTERFACE
                        JavaSDM.ensure ( JavaSDM.stringCompare ((String) iStereo.getName (), FStereotype.INTERFACE) == 0 );

                        // constraint (superInterface.sizeOfRoles() > 0) || (superInterface.sizeOfAttrs() > 0)
                        JavaSDM.ensure ( (superInterface.sizeOfRoles() > 0) || (superInterface.sizeOfAttrs() > 0) );
                        // story pattern Successor of 
                        try 
                        {
                           fujaba__Success = false; 

                           // check object clazz is really bound
                           JavaSDM.ensure ( clazz != null );
                           // check object superInterface is really bound
                           JavaSDM.ensure ( superInterface != null );
                           // check isomorphic binding between objects superInterface and clazz
                           JavaSDM.ensure ( !superInterface.equals (clazz) );

                           // iterate to-many link $link.InstanceOf.Name from clazz to superClass
                           fujaba__Success = false;
                           fujaba__IterClazzToSuperClass = new de.uni_kassel.sdm.Path (clazz, "(revSubclass.superclass)*");
                           while ( !(fujaba__Success) && fujaba__IterClazzToSuperClass.hasNext () )
                           {
                              try
                              {
                                 _TmpObject =  fujaba__IterClazzToSuperClass.next ();

                                 // ensure correct type and really bound of object superClass
                                 JavaSDM.ensure ( _TmpObject instanceof FClass );
                                 superClass = (FClass) _TmpObject;

                                 // check isomorphic binding between objects superClass and clazz
                                 JavaSDM.ensure ( !superClass.equals (clazz) );

                                 // check isomorphic binding between objects superInterface and superClass
                                 JavaSDM.ensure ( !superInterface.equals (superClass) );

                                 // check negative bindings
                                 try
                                 {
                                    fujaba__Success = false;

                                    // iterate to-many link stereotypes from superClass to noStereo
                                    fujaba__Success = false;
                                    fujaba__IterSuperClassToNoStereo = superClass.iteratorOfStereotypes ();

                                    while ( !(fujaba__Success) && fujaba__IterSuperClassToNoStereo.hasNext () )
                                    {
                                       try
                                       {
                                          noStereo = (FStereotype) fujaba__IterSuperClassToNoStereo.next ();

                                          // check object noStereo is really bound
                                          JavaSDM.ensure ( noStereo != null );
                                          // attribute condition name == FStereotype.INTERFACE
                                          JavaSDM.ensure ( JavaSDM.stringCompare ((String) noStereo.getName (), FStereotype.INTERFACE) == 0 );


                                          fujaba__Success = true;
                                       }
                                       catch ( JavaSDMException fujaba__InternalException )
                                       {
                                          fujaba__Success = false;
                                       }
                                    }
                                    JavaSDM.ensure (fujaba__Success);

                                    fujaba__Success = true;
                                 }
                                 catch ( JavaSDMException fujaba__InternalException )
                                 {
                                    fujaba__Success = false;
                                 }

                                 fujaba__Success = !(fujaba__Success);

                                 JavaSDM.ensure ( fujaba__Success );

                                 // check path expresion (revSubclass.superclass)* from superClass to superInterface
                                 // iterate to-many link $link.InstanceOf.Name from superClass to superInterface
                                 fujaba__Success = false;
                                 fujaba__IterSuperClassToSuperInterface = new de.uni_kassel.sdm.Path (superClass, "(revSubclass.superclass)*");
                                 while ( !(fujaba__Success) && fujaba__IterSuperClassToSuperInterface.hasNext () )
                                 {
                                    try
                                    {
                                       JavaSDM.ensure (superInterface.equals (fujaba__IterSuperClassToSuperInterface.next ()));

                                       fujaba__Success = true;
                                    }
                                    catch ( JavaSDMException fujaba__InternalException )
                                    {
                                       fujaba__Success = false;
                                    }
                                 }
                                 JavaSDM.ensure (fujaba__Success);

                                 fujaba__Success = true;
                              }
                              catch ( JavaSDMException fujaba__InternalException )
                              {
                                 fujaba__Success = false;
                              }
                           }
                           JavaSDM.ensure (fujaba__Success);
                           fujaba__Success = true;
                        }
                        catch ( JavaSDMException fujaba__InternalException )
                        {
                           fujaba__Success = false;
                        }

                        if ( !( fujaba__Success ) )
                        {
                           // story pattern storypatternwiththis
                           try 
                           {
                              fujaba__Success = false; 

                              // collabStat call
                              this.addRoleToken(superInterface, token);
                              // collabStat call
                              this.addAttrToken(superInterface, token);
                              fujaba__Success = true;
                           }
                           catch ( JavaSDMException fujaba__InternalException )
                           {
                              fujaba__Success = false;
                           }


                        }

                        fujaba__Success = true;
                     }
                     catch ( JavaSDMException fujaba__InternalException )
                     {
                        fujaba__Success = false;
                     }
                  }
                  JavaSDM.ensure (fujaba__Success);

                  fujaba__Success = true;
               }
               catch ( JavaSDMException fujaba__InternalException )
               {
                  fujaba__Success = false;
               }
            }
            JavaSDM.ensure (fujaba__Success);
            fujaba__Success = true;
         }
         catch ( JavaSDMException fujaba__InternalException )
         {
            fujaba__Success = false;
         }


      }
      // story pattern 
      try 
      {
         fujaba__Success = false; 

         // check object clazz is really bound
         JavaSDM.ensure ( clazz != null );
         // search to-one link statechart from clazz to statechart
         _TmpObject = clazz.getStatechart ();

         // ensure correct type and really bound of object statechart
         JavaSDM.ensure ( _TmpObject instanceof UMLStatechart );
         statechart = (UMLStatechart) _TmpObject;



         // collabStat call
         this.createToken (statechart, token);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      return token;
   }

   public boolean isResponsible (FElement element )
   {
      boolean fujaba__Success = false;
      Object _TmpObject = null;
      FClass clazz = null;

      // story pattern 
      try 
      {
         fujaba__Success = false; 

         _TmpObject = element;

         // ensure correct type and really bound of object clazz
         JavaSDM.ensure ( _TmpObject instanceof FClass );
         clazz = (FClass) _TmpObject;

         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( fujaba__Success )
      {
         return true;

      }
      return false;
   }

}


