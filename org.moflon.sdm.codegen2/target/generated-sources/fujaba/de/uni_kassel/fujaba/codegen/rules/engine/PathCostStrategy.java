/*
 * generated by Fujaba - CodeGen2
 */
package de.uni_kassel.fujaba.codegen.rules.engine;
import de.uni_kassel.features.ReferenceHandler; // requires Fujaba5/libs/features.jar in classpath
import de.uni_kassel.features.annotation.util.Property; // requires Fujaba5/libs/features.jar in classpath
import de.uni_kassel.fujaba.codegen.rules.LinkOperation;
import de.uni_kassel.fujaba.codegen.rules.Token;
import de.uni_kassel.fujaba.codegen.rules.UMLLinkRef;
import de.uni_kassel.fujaba.codegen.rules.UMLObjectRef;
import de.uni_paderborn.fujaba.metamodel.structure.FRole;
import de.uni_paderborn.fujaba.uml.behavior.UMLLink;
import de.uni_paderborn.fujaba.uml.behavior.UMLObject;
import de.uni_paderborn.fujaba.uml.behavior.UMLPath;
import de.upb.tools.sdm.JavaSDM;
import de.upb.tools.sdm.JavaSDMException; // requires Fujaba5/libs/RuntimeTools.jar in classpath


public class PathCostStrategy extends LinkOperationCostStrategy
{


   public static final String PROPERTY_CHEC_K_COST = "CHECK_COST";

   @Property( name = PROPERTY_CHEC_K_COST, kind = ReferenceHandler.ReferenceKind.ATTRIBUTE )
   public static final double CHECK_COST = 1001;


   public static final String PROPERTY_PAYLOAD = "PAYLOAD";

   @Property( name = PROPERTY_PAYLOAD, kind = ReferenceHandler.ReferenceKind.ATTRIBUTE )
   public static final double PAYLOAD = 1000;


   public static final String PROPERTY_SEARC_H_COST = "SEARCH_COST";

   @Property( name = PROPERTY_SEARC_H_COST, kind = ReferenceHandler.ReferenceKind.ATTRIBUTE )
   public static final double SEARCH_COST = 1000;


   public double getCheckCost (double payload )
   {

      return payload * CHECK_COST;
   }

   public double getCreateCost (UMLLinkRef linkRef , UMLObjectRef from , double payload )
   {
      boolean fujaba__Success = false;

      // story pattern 
      try 
      {
         fujaba__Success = false; 

         // collabStat call
         getEngine().internalError ("Can not create path.", null);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      return 0;
   }

   public double getDestroyCost (UMLLinkRef linkRef , UMLObjectRef from , double payload )
   {
      boolean fujaba__Success = false;

      // story pattern 
      try 
      {
         fujaba__Success = false; 

         // collabStat call
         getEngine().internalError ("Can not delete path", null);
         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      return 0;
   }

   public double getPayload (UMLLink link , UMLObject target )
   {

      return PAYLOAD;
   }

   public double getSearchCost (double payload )
   {

      return payload * SEARCH_COST;
   }

   public boolean isResponsibleImpl (Token operation , UMLLink link , UMLObject target , FRole sourceRole , FRole targetRole )
   {

      return false;
   }

   public boolean isResponsible (Token operation )
   {
      boolean fujaba__Success = false;
      Object _TmpObject = null;
      LinkOperation linkOp = null;
      UMLPath path = null;
      UMLLinkRef pathRef = null;

      // story pattern 
      try 
      {
         fujaba__Success = false; 

         _TmpObject = operation;

         // ensure correct type and really bound of object linkOp
         JavaSDM.ensure ( _TmpObject instanceof LinkOperation );
         linkOp = (LinkOperation) _TmpObject;

         // search to-one link link from linkOp to pathRef
         pathRef = linkOp.getLink ();

         // check object pathRef is really bound
         JavaSDM.ensure ( pathRef != null );

         // search to-one link ref from pathRef to path
         _TmpObject = pathRef.getRef ();

         // ensure correct type and really bound of object path
         JavaSDM.ensure ( _TmpObject instanceof UMLPath );
         path = (UMLPath) _TmpObject;




         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( fujaba__Success )
      {
         return true;

      }
      return false;
   }

}


