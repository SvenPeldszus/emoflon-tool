/*
 * generated by Fujaba - CodeGen2
 */
package de.uni_kassel.fujaba.codegen.rules.engine;

import java.util.Iterator;

import de.uni_kassel.fujaba.codegen.rules.ExecuteStoryPatternOperation;
import de.uni_kassel.fujaba.codegen.rules.ForEachMutatorBlock;
import de.uni_kassel.fujaba.codegen.rules.Token;
import de.uni_kassel.fujaba.codegen.sequencer.FlowActivity;
import de.uni_kassel.fujaba.codegen.sequencer.Seq;
import de.uni_paderborn.fujaba.uml.behavior.UMLStoryActivity;
import de.uni_paderborn.fujaba.uml.behavior.UMLStoryPattern;
import de.upb.tools.sdm.JavaSDM; // requires Fujaba5/libs/RuntimeTools.jar in classpath
import de.upb.tools.sdm.JavaSDMException;


public class ForEachMutator extends PlanMutator
{


   public void mutate (ExecuteStoryPatternOperation plan )
   {
      boolean fujaba__Success = false;
      UMLStoryActivity act = null;
      UMLStoryPattern story = null;
      Token parent = null;
      Iterator fujaba__IterPlanToBlock = null;
      Object _TmpObject = null;
      ForEachMutatorBlock block = null;
      Seq seq = null;
      FlowActivity flow = null;

      // story pattern successor
      try 
      {
         fujaba__Success = false; 

         // check object plan is really bound
         JavaSDM.ensure ( plan != null );
         // search to-one link storyPattern from plan to story
         story = plan.getStoryPattern ();

         // check object story is really bound
         JavaSDM.ensure ( story != null );

         // search to-one link storyPattern from story to act
         act = story.getRevStoryPattern ();

         // check object act is really bound
         JavaSDM.ensure ( act != null );

         // attribute condition forEach == true
         JavaSDM.ensure ( act.isForEach () == true );



         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      if ( !( fujaba__Success ) )
      {
         return ;

      }
      // story pattern 
      try 
      {
         fujaba__Success = false; 

         // check object plan is really bound
         JavaSDM.ensure ( plan != null );
         // search to-one link children from plan to flow
         _TmpObject = plan.getParent ();

         // ensure correct type and really bound of object flow
         JavaSDM.ensure ( _TmpObject instanceof FlowActivity );
         flow = (FlowActivity) _TmpObject;


         // search to-one link forEachSeq from flow to seq
         seq = flow.getForEachSeq ();

         // check object seq is really bound
         JavaSDM.ensure ( seq != null );

         // iterate to-many link operations from plan to block
         fujaba__Success = false;
         fujaba__IterPlanToBlock = plan.iteratorOfOperations ();

         while ( !(fujaba__Success) && fujaba__IterPlanToBlock.hasNext () )
         {
            try
            {
               _TmpObject =  fujaba__IterPlanToBlock.next ();

               // ensure correct type and really bound of object block
               JavaSDM.ensure ( _TmpObject instanceof ForEachMutatorBlock );
               block = (ForEachMutatorBlock) _TmpObject;

               // search to-one link children from block to parent
               parent = block.getParent ();

               // check object parent is really bound
               JavaSDM.ensure ( parent != null );

               // check isomorphic binding between objects parent and block
               JavaSDM.ensure ( !parent.equals (block) );

               // check isomorphic binding between objects parent and flow
               JavaSDM.ensure ( !parent.equals (flow) );

               // check isomorphic binding between objects seq and parent
               JavaSDM.ensure ( !seq.equals (parent) );



               fujaba__Success = true;
            }
            catch ( JavaSDMException fujaba__InternalException )
            {
               fujaba__Success = false;
            }
         }
         JavaSDM.ensure (fujaba__Success);


         // create link children from parent to seq
         parent.addToChildren (seq);

         fujaba__Success = true;
      }
      catch ( JavaSDMException fujaba__InternalException )
      {
         fujaba__Success = false;
      }

      return ;
   }

}


